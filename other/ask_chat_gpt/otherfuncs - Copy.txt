-----function_start-----
_init
        _init:
4011b8  sub     rsp, 0x8
4011bc  mov     rax,  [0x606fd0]
4011c3  test    rax, rax
4011c6  je      0x4011ca
4011ca  add     rsp, 0x8
4011ce  ret     
4011c8  call    rax
-----function_end-----
-----function_start-----
sub_4011d0
4011d0  push     [0x606e70]
4011d6  jmp      [0x606e78]
-----function_end-----
-----function_start-----
sub_4011dc
4011dc  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
free
        free:
4011e0  jmp      [0x606e80]
-----function_end-----
-----function_start-----
abort
        abort:
4011f0  jmp      [0x606e88]
-----function_end-----
-----function_start-----
strncmp
        strncmp:
401210  jmp      [0x606e98]
-----function_end-----
-----function_start-----
_exit
        _exit:
401220  jmp      [0x606ea0]
-----function_end-----
-----function_start-----
write
        write:
401240  jmp      [0x606eb0]
-----function_end-----
-----function_start-----
textdomain
        textdomain:
401250  jmp      [0x606eb8]
-----function_end-----
-----function_start-----
fclose
        fclose:
401260  jmp      [0x606ec0]
-----function_end-----
-----function_start-----
bindtextdomain
        bindtextdomain:
401270  jmp      [0x606ec8]
-----function_end-----
-----function_start-----
dcgettext
        dcgettext:
401280  jmp      [0x606ed0]
-----function_end-----
-----function_start-----
strlen
        strlen:
4012a0  jmp      [0x606ee0]
-----function_end-----
-----function_start-----
getopt_long
        getopt_long:
4012c0  jmp      [0x606ef0]
-----function_end-----
-----function_start-----
mbrtowc
        mbrtowc:
4012d0  jmp      [0x606ef8]
-----function_end-----
-----function_start-----
strrchr
        strrchr:
4012e0  jmp      [0x606f00]
-----function_end-----
-----function_start-----
lseek
        lseek:
4012f0  jmp      [0x606f08]
-----function_end-----
-----function_start-----
memset
        memset:
401300  jmp      [0x606f10]
-----function_end-----
-----function_start-----
memcmp
        memcmp:
401310  jmp      [0x606f18]
-----function_end-----
-----function_start-----
fputs_unlocked
        fputs_unlocked:
401320  jmp      [0x606f20]
-----function_end-----
-----function_start-----
calloc
        calloc:
401330  jmp      [0x606f28]
-----function_end-----
-----function_start-----
memcpy
        memcpy:
401340  jmp      [0x606f30]
-----function_end-----
-----function_start-----
fileno
        fileno:
401350  jmp      [0x606f38]
-----function_end-----
-----function_start-----
malloc
        malloc:
401360  jmp      [0x606f40]
-----function_end-----
-----function_start-----
fflush
        fflush:
401370  jmp      [0x606f48]
-----function_end-----
-----function_start-----
nl_langinfo
        nl_langinfo:
401380  jmp      [0x606f50]
-----function_end-----
-----function_start-----
realloc
        realloc:
4013a0  jmp      [0x606f60]
-----function_end-----
-----function_start-----
setlocale
        setlocale:
4013b0  jmp      [0x606f68]
-----function_end-----
-----function_start-----
error
        error:
4013d0  jmp      [0x606f78]
-----function_end-----
-----function_start-----
fseeko
        fseeko:
4013e0  jmp      [0x606f80]
-----function_end-----
-----function_start-----
exit
        exit:
401400  jmp      [0x606f90]
-----function_end-----
-----function_start-----
fwrite
        fwrite:
401410  jmp      [0x606f98]
-----function_end-----
-----function_start-----
mbsinit
        mbsinit:
401430  jmp      [0x606fa8]
-----function_end-----
-----function_start-----
iswprint
        iswprint:
401440  jmp      [0x606fb0]
-----function_end-----
-----function_start-----
main
        main:
401470  push    r15
401472  push    r14
401474  push    r13
401476  push    r12
401478  mov     r12d, edi
40147b  push    rbp
40147c  push    rbx
40147d  mov     rbx, rsi
401480  sub     rsp, 0x18
401484  mov     rdi, qword  ptr  [rsi]
401487  call    set_program_name
40148c  lea     rsi,  [0x4050c1]
401493  mov     edi, 0x6
401498  call    setlocale
40149d  lea     rsi,  [0x40494b]
4014a4  lea     rdi,  [0x404922]
4014ab  call    bindtextdomain
4014b0  lea     rdi,  [0x404922]
4014b7  call    textdomain
4014bc  lea     rdi,  [close_stdout]
4014c3  call    atexit
4014c8  lea     rax,  [0x404963]
4014cf  sub     rsp, 0x8
4014d3  mov     r8,  [Version]
4014da  push    0x0
4014dc  lea     rdx,  [0x4048a4]
4014e3  lea     rcx,  [0x40491e]
4014ea  push    rax
4014eb  lea     rax,  [usage]
4014f2  mov     r9d, 0x1
4014f8  mov     rsi, rbx
4014fb  mov     edi, r12d
4014fe  push    rax
4014ff  xor     eax, eax
401501  call    parse_gnu_standard_options_only
401506  movsxd  rdx,  [optind@@GLIBC_2.2.5]
40150d  mov     rax, rdx
401510  lea     rbp,  [rbx+rdx*0x8]
401514  movsxd  rdx, r12d
401517  lea     rdx,  [rbx+rdx*0x8]
40151b  mov     qword  ptr  [rsp+0x20], rdx
401520  add     rsp, 0x20
401524  cmp     eax, r12d
401527  jne     0x40153f
401529  mov     rax, rdx
40152c  lea     rdx,  [0x404973]
401533  add     rax, 0x8
401537  mov     qword  ptr  [rax-0x8], rdx
40153b  mov     qword  ptr  [rsp], rax

40153f  cmp     qword  ptr  [rsp], rbp
401543  jbe     0x4016a0
40153f  cmp     qword  ptr  [rsp], rbp
401543  jbe     0x4016a0
4016a0  mov     edi, 0x2000
4016a5  call    xmalloc
401549  mov     r13, qword  ptr  [rbp]
40154d  mov     rbx, rbp
401550  mov     r15d, 0x1
401556  xor     r12d, r12d
401559  mov     r14, r13

40155c  mov     rdi, r14
40155f  add     rbx, 0x8
401563  call    strlen
4016aa  mov     byte  ptr  [rax-0x1], 0xa
4016ae  ud2     
401568  add     rax, 0x1
40156c  add     r12, rax
40156f  cmp     rbx, qword  ptr  [rsp]
401573  jae     0x401590
401575  add     rax, r14
401578  mov     r14, qword  ptr  [rbx]
40157b  cmp     rax, r14
40157e  mov     eax, 0x0
401583  cmovne  r15d, eax
401587  jmp     0x40155c
401590  cmp     r12, 0x1000
401597  jbe     0x4015ed
40155c  mov     rdi, r14
40155f  add     rbx, 0x8
401563  call    strlen
4015ed  mov     r12d, 0x2000

4015f3  mov     rdi, r12
4015f6  xor     r15d, r15d
4015f9  call    xmalloc
401599  test    r15b, r15b
40159c  je      0x4015f3
4015fe  mov     r13, rax
401601  jmp     0x40159e
4015f3  mov     rdi, r12
4015f6  xor     r15d, r15d
4015f9  call    xmalloc
40159e  xor     ebx, ebx
4015a0  jmp     0x4015c0
4015c0  mov     rsi, qword  ptr  [rbp]
4015c4  mov     rdi, rsi
4015c7  mov     qword  ptr  [rsp+0x8], rsi
4015cc  call    strlen
4015d1  test    r15b, r15b
4015d4  mov     r14, rax
4015d7  mov     rsi, qword  ptr  [rsp+0x8]
4015dc  jne     0x4015a8
4015de  lea     rdi,  [r13+rbx]
4015e3  mov     rdx, rax
4015e6  call    memcpy
4015a8  lea     rax,  [r14+rbx]
4015ac  add     rbp, 0x8
4015b0  lea     rbx,  [rax+0x1]
4015b4  add     rax, r13
4015b7  cmp     qword  ptr  [rsp], rbp
4015bb  mov     byte  ptr  [rax], 0x20
4015be  jbe     0x401608
4015eb  jmp     0x4015a8
401608  xor     edx, edx
40160a  mov     byte  ptr  [rax], 0xa
40160d  mov     rax, r12
401610  div     rbx
401613  mov     rbp, rax
401616  mov     r12, rax
401619  sub     rbp, 0x1
40161d  je      0x401646
401646  mov     rdx, rbx
401649  mov     rsi, r13
40164c  mov     edi, 0x1
401651  call    full_write
40161f  lea     rcx,  [r13+rbx]
401624  nop     dword  ptr  [rax]

401628  mov     rdi, rcx
40162b  mov     rdx, rbx
40162e  mov     rsi, r13
401631  call    memcpy
401656  cmp     rax, rbx
401659  je      0x401646
401636  mov     rcx, rax
401639  add     rcx, rbx
40163c  sub     rbp, 0x1
401640  jne     0x401628
40165b  lea     rsi,  [0x404975]
401662  mov     edx, 0x5
401667  xor     edi, edi
401669  call    dcgettext
401642  imul    rbx, r12

401646  mov     rdx, rbx
401649  mov     rsi, r13
40164c  mov     edi, 0x1
401651  call    full_write
401628  mov     rdi, rcx
40162b  mov     rdx, rbx
40162e  mov     rsi, r13
401631  call    memcpy
40166e  mov     rbx, rax
401671  call    __errno_location
401676  mov     esi, dword  ptr  [rax]
401678  mov     rdx, rbx
40167b  xor     eax, eax
40167d  xor     edi, edi
40167f  call    error
401684  add     rsp, 0x18
401688  mov     eax, 0x1
40168d  pop     rbx
40168e  pop     rbp
40168f  pop     r12
401691  pop     r13
401693  pop     r14
401695  pop     r15
401697  ret     
-----function_end-----
-----function_start-----
sub_401589
401589  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_4015a2
4015a2  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_401603
401603  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_401698
401698  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
_start
        _start:
4016b0  xor     ebp, ebp
4016b2  mov     r9, rdx
4016b5  pop     rsi
4016b6  mov     rdx, rsp
4016b9  and     rsp, 0xfffffffffffffff0
4016bd  push    rax
4016be  push    rsp
4016bf  lea     r8,  [__libc_csu_fini]
4016c6  lea     rcx,  [__libc_csu_init]
4016cd  lea     rdi,  [main]
4016d4  call     [0x606fc8]
-----function_end-----
-----function_start-----
sub_4016da
4016da  hlt     
-----function_end-----
-----function_start-----
sub_4016db
4016db  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
deregister_tm_clones
        deregister_tm_clones:
4016e0  lea     rdi,  [program_invocation_short_name@@GLIBC_2.2.5]
4016e7  push    rbp
4016e8  lea     rax,  [program_invocation_short_name@@GLIBC_2.2.5]
4016ef  cmp     rax, rdi
4016f2  mov     rbp, rsp
4016f5  je      0x401710
401710  pop     rbp
401711  ret     
4016f7  mov     rax,  [0x606fc0]
4016fe  test    rax, rax
401701  je      0x401710
401703  pop     rbp
401704  jmp     rax
401706  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
sub_401712
401712  nop     dword  ptr  [rax]
401716  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
register_tm_clones
        register_tm_clones:
401720  lea     rdi,  [program_invocation_short_name@@GLIBC_2.2.5]
401727  lea     rsi,  [program_invocation_short_name@@GLIBC_2.2.5]
40172e  push    rbp
40172f  sub     rsi, rdi
401732  mov     rbp, rsp
401735  sar     rsi, 0x3
401739  mov     rax, rsi
40173c  shr     rax, 0x3f
401740  add     rsi, rax
401743  sar     rsi, 0x1
401746  je      0x401760
401760  pop     rbp
401761  ret     
401748  mov     rax,  [0x606fd8]
40174f  test    rax, rax
401752  je      0x401760
401754  pop     rbp
401755  jmp     rax
401757  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_401762
401762  nop     dword  ptr  [rax]
401766  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
sub_4017a1
4017a1  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_4017aa
4017aa  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
frame_dummy
        frame_dummy:
4017b0  push    rbp
4017b1  mov     rbp, rsp
4017b4  pop     rbp
4017b5  jmp     register_tm_clones
-----function_end-----
-----function_start-----
sub_4017ba
4017ba  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
usage
        usage:
4017c0  push    r13
4017c2  push    r12
4017c4  mov     edx, 0x5
4017c9  push    rbp
4017ca  push    rbx
4017cb  mov     ebp, edi
4017cd  sub     rsp, 0x88
4017d4  mov     rbx,  [program_name]
4017db  mov     rax, qword  ptr   fs:[0x28]
4017e4  mov     qword  ptr  [rsp+0x78], rax
4017e9  xor     eax, eax
4017eb  test    edi, edi
4017ed  je      0x40181d
40181d  lea     rsi,  [0x4049b0]
401824  xor     edi, edi
401826  call    dcgettext
4017ef  lea     rsi,  [0x404988]
4017f6  xor     edi, edi
4017f8  call    dcgettext
40182b  mov     rcx, rbx
40182e  mov     rdx, rbx
401831  mov     rsi, rax
401834  mov     edi, 0x1
401839  xor     eax, eax
40183b  call    __printf_chk
4017fd  mov     rdi,  [stderr@@GLIBC_2.2.5]
401804  mov     rdx, rax
401807  mov     rcx, rbx
40180a  mov     esi, 0x1
40180f  xor     eax, eax
401811  call    __fprintf_chk
401840  mov     rbx,  [stdout@@GLIBC_2.2.5]
401847  lea     rsi,  [0x4049d8]
40184e  mov     edx, 0x5
401853  xor     edi, edi
401855  call    dcgettext
401816  mov     edi, ebp
401818  call    exit
40185a  mov     rsi, rbx
40185d  mov     rdi, rax
401860  call    fputs_unlocked
401865  mov     rbx,  [stdout@@GLIBC_2.2.5]
40186c  lea     rsi,  [0x404a20]
401873  mov     edx, 0x5
401878  xor     edi, edi
40187a  call    dcgettext
40187f  mov     rsi, rbx
401882  mov     rdi, rax
401885  call    fputs_unlocked
40188a  mov     rbx,  [stdout@@GLIBC_2.2.5]
401891  lea     rsi,  [0x404a50]
401898  mov     edx, 0x5
40189d  xor     edi, edi
40189f  call    dcgettext
4018a4  mov     rsi, rbx
4018a7  mov     rdi, rax
4018aa  lea     rbx,  [0x4048a4]
4018b1  call    fputs_unlocked
4018b6  lea     rax,  [0x4048a8]
4018bd  lea     rcx,  [0x4048e9]
4018c4  mov     qword  ptr  [rsp+0x60], 0x0
4018cd  mov     qword  ptr  [rsp+0x68], 0x0
4018d6  mov     rdx, rsp
4018d9  mov     qword  ptr  [rsp], rax
4018dd  lea     rax,  [0x4048aa]
4018e4  mov     qword  ptr  [rsp+0x30], rcx
4018e9  lea     rcx,  [0x4048f3]
4018f0  mov     qword  ptr  [rsp+0x8], rax
4018f5  lea     rax,  [0x404922]
4018fc  mov     qword  ptr  [rsp+0x40], rcx
401901  lea     rcx,  [0x4048fd]
401908  mov     qword  ptr  [rsp+0x10], rax
40190d  lea     rax,  [0x4048ba]
401914  mov     qword  ptr  [rsp+0x50], rcx
401919  mov     qword  ptr  [rsp+0x18], rax
40191e  lea     rax,  [0x4048d0]
401925  mov     qword  ptr  [rsp+0x20], rax
40192a  lea     rax,  [0x4048da]
401931  mov     qword  ptr  [rsp+0x28], rax
401936  mov     qword  ptr  [rsp+0x38], rax
40193b  mov     qword  ptr  [rsp+0x48], rax
401940  mov     qword  ptr  [rsp+0x58], rax
401945  nop     dword  ptr  [rax]

401948  add     rdx, 0x10
40194c  mov     rdi, qword  ptr  [rdx]
40194f  test    rdi, rdi
401952  je      0x401967
401967  mov     r12, qword  ptr  [rdx+0x8]
40196b  xor     edi, edi
40196d  mov     edx, 0x5
401972  lea     rsi,  [0x404907]
401979  test    r12, r12
40197c  je      0x401a43
  401954  mov     ecx, 0x4
  401959  mov     rsi, rbx
  
@ 40195c  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
401a43  call    dcgettext
401982  call    dcgettext
40195e  seta    al
401961  sbb     al, 0x0
401963  test    al, al
401965  jne     0x401948
@ 40195c  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
401a48  lea     rcx,  [0x404a88]
401a4f  lea     rdx,  [0x40491e]
401a56  mov     rsi, rax
401a59  mov     edi, 0x1
401a5e  xor     eax, eax
401a60  call    __printf_chk
401987  lea     rcx,  [0x404a88]
40198e  lea     rdx,  [0x40491e]
401995  mov     rsi, rax
401998  mov     edi, 0x1
40199d  xor     eax, eax
40199f  call    __printf_chk
401948  add     rdx, 0x10
40194c  mov     rdi, qword  ptr  [rdx]
40194f  test    rdi, rdi
401952  je      0x401967
401a65  xor     esi, esi
401a67  mov     edi, 0x5
401a6c  call    setlocale
4019a4  xor     esi, esi
4019a6  mov     edi, 0x5
4019ab  call    setlocale
401a71  test    rax, rax
401a74  je      0x401a8e
4019b0  test    rax, rax
4019b3  je      0x4019d1
401a8e  lea     rsi,  [0x404930]
401a95  mov     edx, 0x5
401a9a  xor     edi, edi
401a9c  lea     r12,  [0x4048a4]
401aa3  lea     rbx,  [0x4048c4]
401aaa  call    dcgettext
401a76  lea     rsi,  [0x40492c]
401a7d  mov     edx, 0x3
401a82  mov     rdi, rax
401a85  call    strncmp
4019d1  lea     rsi,  [0x404930]
4019d8  xor     edi, edi
4019da  mov     edx, 0x5
4019df  call    dcgettext
4019b5  lea     rsi,  [0x40492c]
4019bc  mov     edx, 0x3
4019c1  mov     rdi, rax
4019c4  call    strncmp
401aaf  lea     rcx,  [0x4048a4]
401ab6  lea     rdx,  [0x404a88]
401abd  mov     rsi, rax
401ac0  mov     edi, 0x1
401ac5  xor     eax, eax
401ac7  call    __printf_chk
401a8a  test    eax, eax
401a8c  jne     0x401ad1
4019e4  lea     rcx,  [0x4048a4]
4019eb  lea     rdx,  [0x404a88]
4019f2  mov     rsi, rax
4019f5  mov     edi, 0x1
4019fa  xor     eax, eax
4019fc  call    __printf_chk
4019c9  test    eax, eax
4019cb  jne     0x401ad8
401acc  jmp     0x401a16
401ad1  lea     r12,  [0x4048a4]

401ad8  mov     r13,  [stdout@@GLIBC_2.2.5]
401adf  lea     rsi,  [0x404ab0]
401ae6  xor     edi, edi
401ae8  mov     edx, 0x5
401aed  call    dcgettext
401a01  cmp     r12, rbx
401a04  lea     rcx,  [0x4048c4]
401a0b  lea     rbx,  [0x4050c1]
401a12  cmove   rbx, rcx

401a16  lea     rsi,  [0x404af8]
401a1d  xor     edi, edi
401a1f  mov     edx, 0x5
401a24  call    dcgettext
401ad8  mov     r13,  [stdout@@GLIBC_2.2.5]
401adf  lea     rsi,  [0x404ab0]
401ae6  xor     edi, edi
401ae8  mov     edx, 0x5
401aed  call    dcgettext
401a16  lea     rsi,  [0x404af8]
401a1d  xor     edi, edi
401a1f  mov     edx, 0x5
401a24  call    dcgettext
401af2  mov     rsi, r13
401af5  mov     rdi, rax
401af8  call    fputs_unlocked
401a29  mov     rcx, rbx
401a2c  mov     rsi, rax
401a2f  mov     rdx, r12
401a32  mov     edi, 0x1
401a37  xor     eax, eax
401a39  call    __printf_chk
401afd  jmp     0x4019d1
401a3e  jmp     0x401816
-----function_end-----
-----function_start-----
sub_401b02
401b02  nop     word  ptr   cs:[rax+rax]
401b0c  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
close_stdout_set_file_name
        close_stdout_set_file_name:
401b10  mov      [file_name], rdi
401b17  ret     
-----function_end-----
-----function_start-----
sub_401b18
401b18  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
close_stdout_set_ignore_EPIPE
        close_stdout_set_ignore_EPIPE:
401b20  mov      [ignore_EPIPE], dil
401b27  ret     
-----function_end-----
-----function_start-----
sub_401b28
401b28  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
close_stdout
        close_stdout:
401b30  push    rbp
401b31  push    rbx
401b32  sub     rsp, 0x8
401b36  mov     rdi,  [stdout@@GLIBC_2.2.5]
401b3d  call    close_stream
401b42  test    eax, eax
401b44  je      0x401b5c
401b5c  mov     rdi,  [stderr@@GLIBC_2.2.5]
401b63  call    close_stream
401b46  call    __errno_location
401b68  test    eax, eax
401b6a  jne     0x401bb2
401b4b  cmp      [ignore_EPIPE], 0x0
401b52  mov     rbx, rax
401b55  je      0x401b73
401b6c  add     rsp, 0x8
401b70  pop     rbx
401b71  pop     rbp
401b72  ret     
401bb2  mov     edi,  [exit_failure]
401bb8  call    _exit
401b73  lea     rsi,  [0x404b30]
401b7a  xor     edi, edi
401b7c  mov     edx, 0x5
401b81  call    dcgettext
401b57  cmp     dword  ptr  [rax], 0x20
401b5a  jne     0x401b73
401bbd  mov     esi, dword  ptr  [rbx]
401bbf  lea     rdx,  [0x404b40]
401bc6  mov     rcx, rax
401bc9  xor     edi, edi
401bcb  xor     eax, eax
401bcd  call    error
401b86  mov     rdi,  [file_name]
401b8d  mov     rbp, rax
401b90  test    rdi, rdi
401b93  je      0x401bbd
401bd2  jmp     0x401bb2
401b95  call    quotearg_colon
401b9a  mov     esi, dword  ptr  [rbx]
401b9c  lea     rdx,  [0x404b3c]
401ba3  mov     rcx, rax
401ba6  mov     r8, rbp
401ba9  xor     edi, edi
401bab  xor     eax, eax
401bad  call    error
-----function_end-----
-----function_start-----
sub_401bd4
401bd4  nop     word  ptr   cs:[rax+rax]
401bde  nop     
-----function_end-----
-----function_start-----
full_write
        full_write:
401be0  push    r13
401be2  push    r12
401be4  push    rbp
401be5  push    rbx
401be6  sub     rsp, 0x8
401bea  test    rdx, rdx
401bed  je      0x401c51
401c51  xor     r12d, r12d
401c54  jmp     0x401c24
401bef  mov     r13d, edi
401bf2  mov     rbp, rsi
401bf5  mov     rbx, rdx
401bf8  xor     r12d, r12d
401bfb  jmp     0x401c10
401c24  add     rsp, 0x8
401c28  mov     rax, r12
401c2b  pop     rbx
401c2c  pop     rbp
401c2d  pop     r12
401c2f  pop     r13
401c31  ret     
401c10  mov     rdx, rbx
401c13  mov     rsi, rbp
401c16  mov     edi, r13d
401c19  call    safe_write
401c1e  cmp     rax, -0x1
401c22  jne     0x401c00
401c00  test    rax, rax
401c03  je      0x401c38
401c38  call    __errno_location
401c05  add     r12, rax
401c08  add     rbp, rax
401c0b  sub     rbx, rax
401c0e  je      0x401c24
401c3d  mov     dword  ptr  [rax], 0x1c
401c43  add     rsp, 0x8
401c47  mov     rax, r12
401c4a  pop     rbx
401c4b  pop     rbp
401c4c  pop     r12
401c4e  pop     r13
401c50  ret     
-----function_end-----
-----function_start-----
sub_401bfd
401bfd  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_401c32
401c32  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_401c56
401c56  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
parse_long_options
        parse_long_options:
401c60  push    r13
401c62  push    r12
401c64  mov     r13, r8
401c67  push    rbp
401c68  push    rbx
401c69  mov     rbp, rdx
401c6c  mov     r12, rcx
401c6f  sub     rsp, 0xe8
401c76  test    al, al
401c78  je      0x401cb4
401cb4  mov     rax, qword  ptr   fs:[0x28]
401cbd  mov     qword  ptr  [rsp+0x28], rax
401cc2  xor     eax, eax
401cc4  cmp     edi, 0x2
401cc7  mov     ebx,  [opterr@@GLIBC_2.2.5]
401ccd  mov      [opterr@@GLIBC_2.2.5], 0x0
401cd7  je      0x401d10
401c7a  movaps  xmmword  ptr  [rsp+0x60], xmm0
401c7f  movaps  xmmword  ptr  [rsp+0x70], xmm1
401c84  movaps  xmmword  ptr  [rsp+0x80], xmm2
401c8c  movaps  xmmword  ptr  [rsp+0x90], xmm3
401c94  movaps  xmmword  ptr  [rsp+0xa0], xmm4
401c9c  movaps  xmmword  ptr  [rsp+0xb0], xmm5
401ca4  movaps  xmmword  ptr  [rsp+0xc0], xmm6
401cac  movaps  xmmword  ptr  [rsp+0xd0], xmm7

401cb4  mov     rax, qword  ptr   fs:[0x28]
401cbd  mov     qword  ptr  [rsp+0x28], rax
401cc2  xor     eax, eax
401cc4  cmp     edi, 0x2
401cc7  mov     ebx,  [opterr@@GLIBC_2.2.5]
401ccd  mov      [opterr@@GLIBC_2.2.5], 0x0
401cd7  je      0x401d10
401d10  lea     rcx,  [long_options]
401d17  lea     rdx,  [0x404b43]
401d1e  xor     r8d, r8d
401d21  mov     qword  ptr  [rsp+0x8], r9
401d26  call    getopt_long
401cd9  mov     rax, qword  ptr  [rsp+0x28]
401cde  xor     rax, qword  ptr   fs:[0x28]
401ce7  mov      [opterr@@GLIBC_2.2.5], ebx
401ced  mov      [optind@@GLIBC_2.2.5], 0x0
401cf7  jne     0x401d9a
401d2b  cmp     eax, -0x1
401d2e  je      0x401cd9
401cfd  add     rsp, 0xe8
401d04  pop     rbx
401d05  pop     rbp
401d06  pop     r12
401d08  pop     r13
401d0a  ret     
401d9a  call    __stack_chk_fail
401d30  cmp     eax, 0x68
401d33  mov     r9, qword  ptr  [rsp+0x8]
401d38  je      0x401d90
401d90  xor     edi, edi
401d92  call    r9
401d3a  cmp     eax, 0x76
401d3d  jne     0x401cd9
401d95  jmp     0x401cd9
401d3f  lea     rax,  [rsp+0x110]
401d47  mov     rdi,  [stdout@@GLIBC_2.2.5]
401d4e  lea     r8,  [rsp+0x10]
401d53  mov     rcx, r13
401d56  mov     rdx, r12
401d59  mov     rsi, rbp
401d5c  mov     qword  ptr  [rsp+0x18], rax
401d61  lea     rax,  [rsp+0x30]
401d66  mov     dword  ptr  [rsp+0x10], 0x30
401d6e  mov     dword  ptr  [rsp+0x14], 0x30
401d76  mov     qword  ptr  [rsp+0x20], rax
401d7b  call    version_etc_va
401d80  xor     edi, edi
401d82  call    exit
-----function_end-----
-----function_start-----
sub_401d0b
401d0b  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_401d87
401d87  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_401d9f
401d9f  nop     
-----function_end-----
-----function_start-----
parse_gnu_standard_options_only
        parse_gnu_standard_options_only:
401da0  push    r14
401da2  push    r13
401da4  mov     r14, r8
401da7  push    r12
401da9  push    rbp
401daa  mov     r12, rdx
401dad  push    rbx
401dae  mov     r13, rcx
401db1  sub     rsp, 0xd0
401db8  test    al, al
401dba  mov     rbp, qword  ptr  [rsp+0x100]
401dc2  je      0x401dfb
401dfb  mov     rax, qword  ptr   fs:[0x28]
401e04  mov     qword  ptr  [rsp+0x18], rax
401e09  xor     eax, eax
401e0b  lea     rdx,  [0x4050c1]
401e12  lea     rax,  [0x404b43]
401e19  test    r9b, r9b
401e1c  lea     rcx,  [long_options]
401e23  cmove   rdx, rax
401e27  xor     r8d, r8d
401e2a  mov     ebx,  [opterr@@GLIBC_2.2.5]
401e30  mov      [opterr@@GLIBC_2.2.5], 0x1
401e3a  call    getopt_long
401dc4  movaps  xmmword  ptr  [rsp+0x50], xmm0
401dc9  movaps  xmmword  ptr  [rsp+0x60], xmm1
401dce  movaps  xmmword  ptr  [rsp+0x70], xmm2
401dd3  movaps  xmmword  ptr  [rsp+0x80], xmm3
401ddb  movaps  xmmword  ptr  [rsp+0x90], xmm4
401de3  movaps  xmmword  ptr  [rsp+0xa0], xmm5
401deb  movaps  xmmword  ptr  [rsp+0xb0], xmm6
401df3  movaps  xmmword  ptr  [rsp+0xc0], xmm7

401dfb  mov     rax, qword  ptr   fs:[0x28]
401e04  mov     qword  ptr  [rsp+0x18], rax
401e09  xor     eax, eax
401e0b  lea     rdx,  [0x4050c1]
401e12  lea     rax,  [0x404b43]
401e19  test    r9b, r9b
401e1c  lea     rcx,  [long_options]
401e23  cmove   rdx, rax
401e27  xor     r8d, r8d
401e2a  mov     ebx,  [opterr@@GLIBC_2.2.5]
401e30  mov      [opterr@@GLIBC_2.2.5], 0x1
401e3a  call    getopt_long
401e3f  cmp     eax, -0x1
401e42  je      0x401ea8
401ea8  mov     rax, qword  ptr  [rsp+0x18]
401ead  xor     rax, qword  ptr   fs:[0x28]
401eb6  mov      [opterr@@GLIBC_2.2.5], ebx
401ebc  jne     0x401ed6
401e44  cmp     eax, 0x68
401e47  je      0x401ed0
401ebe  add     rsp, 0xd0
401ec5  pop     rbx
401ec6  pop     rbp
401ec7  pop     r12
401ec9  pop     r13
401ecb  pop     r14
401ecd  ret     
401ed6  call    __stack_chk_fail
401ed0  xor     edi, edi
401ed2  call    rbp
401e4d  cmp     eax, 0x76
401e50  jne     0x401ea0
401ed4  jmp     0x401ea8
401e52  lea     rax,  [rsp+0x108]
401e5a  mov     rdi,  [stdout@@GLIBC_2.2.5]
401e61  mov     r8, rsp
401e64  mov     rcx, r14
401e67  mov     rdx, r13
401e6a  mov     rsi, r12
401e6d  mov     qword  ptr  [rsp+0x8], rax
401e72  lea     rax,  [rsp+0x20]
401e77  mov     dword  ptr  [rsp], 0x30
401e7e  mov     dword  ptr  [rsp+0x4], 0x30
401e86  mov     qword  ptr  [rsp+0x10], rax
401e8b  call    version_etc_va
401ea0  mov     edi,  [exit_failure]
401ea6  call    rbp
401e90  xor     edi, edi
401e92  call    exit
-----function_end-----
-----function_start-----
sub_401e97
401e97  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_401ece
401ece  nop     
-----function_end-----
-----function_start-----
sub_401edb
401edb  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
set_program_name
        set_program_name:
401ee0  test    rdi, rdi
401ee3  push    rbx
401ee4  je      0x401f5d
401f5d  mov     rcx,  [stderr@@GLIBC_2.2.5]
401f64  lea     rdi,  [0x404b58]
401f6b  mov     edx, 0x37
401f70  mov     esi, 0x1
401f75  call    fwrite
401ee6  mov     esi, 0x2f
401eeb  mov     rbx, rdi
401eee  call    strrchr
401f7a  call    abort
401ef3  test    rax, rax
401ef6  je      0x401f4d
401f4d  mov      [program_name], rbx
401f54  mov      [__progname_full@@GLIBC_2.2.5], rbx
401f5b  pop     rbx
401f5c  ret     
401ef8  lea     r8,  [rax+0x1]
401efc  mov     rdx, r8
401eff  sub     rdx, rbx
401f02  cmp     rdx, 0x6
401f06  jle     0x401f4d
  401f08  lea     rsi,  [rax-0x6]
  401f0c  lea     rdi,  [0x404b90]
  401f13  mov     ecx, 0x7
  
@ 401f18  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
401f1a  seta    dl
401f1d  sbb     dl, 0x0
401f20  test    dl, dl
401f22  jne     0x401f4d
@ 401f18  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
  401f24  lea     rdi,  [0x404b98]
  401f2b  mov     ecx, 0x3
  401f30  mov     rsi, r8
  401f33  mov     rbx, r8
  
@ 401f36  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
401f38  seta    dl
401f3b  sbb     dl, 0x0
401f3e  test    dl, dl
401f40  jne     0x401f4d
@ 401f36  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
401f42  lea     rbx,  [rax+0x4]
401f46  mov      [program_invocation_short_name@@GLIBC_2.2.5], rbx

401f4d  mov      [program_name], rbx
401f54  mov      [__progname_full@@GLIBC_2.2.5], rbx
401f5b  pop     rbx
401f5c  ret     
-----function_end-----
-----function_start-----
sub_401f7f
401f7f  nop     
-----function_end-----
-----function_start-----
gettext_quote.part.1
        gettext_quote.part.1:
401f80  push    rbp
401f81  push    rbx
401f82  mov     rbp, rdi
401f85  mov     ebx, esi
401f87  sub     rsp, 0x8
401f8b  call    locale_charset
401f90  movzx   edx, byte  ptr  [rax]
401f93  and     edx, 0xffffffdf
401f96  cmp     dl, 0x55
401f99  je      0x402010
402010  movzx   edx, byte  ptr  [rax+0x1]
402014  and     edx, 0xffffffdf
402017  cmp     dl, 0x54
40201a  jne     0x401fa0
401f9b  cmp     dl, 0x47
401f9e  je      0x401fc0
40201c  movzx   edx, byte  ptr  [rax+0x2]
402020  and     edx, 0xffffffdf
402023  cmp     dl, 0x46
402026  jne     0x401fa0
401fa0  lea     rax,  [0x404bab]
401fa7  lea     rdx,  [0x404bad]
401fae  cmp     ebx, 0x9
401fb1  cmovne  rax, rdx
401fb5  add     rsp, 0x8
401fb9  pop     rbx
401fba  pop     rbp
401fbb  ret     
401fc0  movzx   edx, byte  ptr  [rax+0x1]
401fc4  and     edx, 0xffffffdf
401fc7  cmp     dl, 0x42
401fca  jne     0x401fa0
40202c  cmp     byte  ptr  [rax+0x3], 0x2d
402030  jne     0x401fa0
401fcc  cmp     byte  ptr  [rax+0x2], 0x31
401fd0  jne     0x401fa0
402036  cmp     byte  ptr  [rax+0x4], 0x38
40203a  jne     0x401fa0
401fd2  cmp     byte  ptr  [rax+0x3], 0x38
401fd6  jne     0x401fa0
402040  cmp     byte  ptr  [rax+0x5], 0x0
402044  jne     0x401fa0
401fd8  cmp     byte  ptr  [rax+0x4], 0x30
401fdc  jne     0x401fa0
40204a  cmp     byte  ptr  [rbp], 0x60
40204e  lea     rax,  [0x404b9c]
402055  lea     rdx,  [0x404ba0]
40205c  cmovne  rax, rdx
402060  add     rsp, 0x8
402064  pop     rbx
402065  pop     rbp
402066  ret     
401fde  cmp     byte  ptr  [rax+0x5], 0x33
401fe2  jne     0x401fa0
401fe4  cmp     byte  ptr  [rax+0x6], 0x30
401fe8  jne     0x401fa0
401fea  cmp     byte  ptr  [rax+0x7], 0x0
401fee  jne     0x401fa0
401ff0  cmp     byte  ptr  [rbp], 0x60
401ff4  lea     rax,  [0x404ba4]
401ffb  lea     rdx,  [0x404ba8]
402002  cmovne  rax, rdx
402006  add     rsp, 0x8
40200a  pop     rbx
40200b  pop     rbp
40200c  ret     
-----function_end-----
-----function_start-----
sub_401fbc
401fbc  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_40200d
40200d  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_402067
402067  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
quotearg_buffer_restyled
        quotearg_buffer_restyled:
402070  push    r15
402072  push    r14
402074  mov     r15d, r8d
402077  push    r13
402079  push    r12
40207b  mov     r14, rdi
40207e  push    rbp
40207f  push    rbx
402080  mov     ebx, r9d
402083  mov     r13, rsi
402086  mov     rbp, rcx
402089  and     ebx, 0x2
40208c  sub     rsp, 0xb8
402093  mov     rax, qword  ptr  [rsp+0xf0]
40209b  mov     qword  ptr  [rsp+0x10], rdx
4020a0  mov     dword  ptr  [rsp+0x8], r8d
4020a5  mov     dword  ptr  [rsp+0x78], r9d
4020aa  mov     qword  ptr  [rsp+0x20], rax
4020af  mov     rax, qword  ptr  [rsp+0xf8]
4020b7  mov     qword  ptr  [rsp+0x68], rax
4020bc  mov     rax, qword  ptr  [rsp+0x100]
4020c4  mov     qword  ptr  [rsp+0x60], rax
4020c9  mov     rax, qword  ptr   fs:[0x28]
4020d2  mov     qword  ptr  [rsp+0xa8], rax
4020da  xor     eax, eax
4020dc  call    __ctype_get_mb_cur_max
4020e1  cmp     r15d, 0xa
4020e5  mov     qword  ptr  [rsp+0x58], rax
4020ea  ja      0x40329f
4020f0  lea     rcx,  [0x404c00]
4020f7  mov     edx, r15d
4020fa  movsxd  rax, dword  ptr  [rcx+rdx*0x4]
4020fe  add     rax, rcx
402101  jmp     rax
40329f  call    abort
402103  mov     byte  ptr  [rsp+0xe], 0x1
402108  mov     byte  ptr  [rsp+0x7c], 0x0
40210d  xor     r12d, r12d
402110  mov     qword  ptr  [rsp+0x50], 0x0
402119  mov     byte  ptr  [rsp+0xf], 0x1
40211e  mov     byte  ptr  [rsp+0xd], 0x0

402123  lea     rax,  [0x404bad]
40212a  mov     qword  ptr  [rsp+0x18], 0x1
402133  xor     r15d, r15d
402136  mov     dword  ptr  [rsp+0x8], 0x2
40213e  mov     qword  ptr  [rsp+0x48], rax

402143  xor     r11d, r11d
402146  mov     rax, rbp
402149  mov     r8d, r12d
40214c  mov     rbp, r11
40214f  mov     r11, rax
402152  nop     word  ptr  [rax+rax]

402158  cmp     r11, rbp
40215b  setne   r12b
40215f  cmp     r11, -0x1
402163  jne     0x402172
402ee4  mov     byte  ptr  [rsp+0xe], 0x1
402ee9  mov     byte  ptr  [rsp+0x7c], 0x0
402eee  xor     r12d, r12d
402ef1  mov     qword  ptr  [rsp+0x50], 0x0
402efa  mov     byte  ptr  [rsp+0xf], 0x1
402eff  mov     byte  ptr  [rsp+0xd], 0x1
402f04  jmp     0x402123
402d85  lea     rax,  [0x404bab]
402d8c  mov     byte  ptr  [rsp+0xe], 0x1
402d91  mov     byte  ptr  [rsp+0x7c], 0x0
402d96  xor     r12d, r12d
402d99  mov     qword  ptr  [rsp+0x50], 0x0
402da2  mov     byte  ptr  [rsp+0xf], 0x1
402da7  mov     byte  ptr  [rsp+0xd], 0x1
402dac  mov     qword  ptr  [rsp+0x18], 0x1
402db5  xor     r15d, r15d
402db8  mov     qword  ptr  [rsp+0x48], rax
402dbd  mov     dword  ptr  [rsp+0x8], 0x5
402dc5  jmp     0x402143
402e04  cmp     dword  ptr  [rsp+0x8], 0xa
402e09  je      0x402e61
402eaa  mov     byte  ptr  [rsp+0xe], 0x1
402eaf  mov     byte  ptr  [rsp+0x7c], 0x0
402eb4  xor     r12d, r12d
402eb7  mov     qword  ptr  [rsp+0x50], 0x0
402ec0  mov     byte  ptr  [rsp+0xf], 0x0
402ec5  xor     r15d, r15d
402ec8  mov     byte  ptr  [rsp+0xd], 0x0
402ecd  mov     qword  ptr  [rsp+0x18], 0x0
402ed6  mov     qword  ptr  [rsp+0x48], 0x0
402edf  jmp     0x402143
402dca  mov     byte  ptr  [rsp+0xe], 0x1
402dcf  mov     byte  ptr  [rsp+0x7c], 0x0
402dd4  xor     r12d, r12d
402dd7  mov     qword  ptr  [rsp+0x50], 0x0
402de0  mov     byte  ptr  [rsp+0xf], 0x0
402de5  xor     r15d, r15d
402de8  mov     byte  ptr  [rsp+0xd], 0x1
402ded  mov     qword  ptr  [rsp+0x18], 0x0
402df6  mov     qword  ptr  [rsp+0x48], 0x0
402dff  jmp     0x402143
402d30  test    ebx, ebx
402d32  jne     0x40312d
402cd4  test    ebx, ebx
402cd6  jne     0x402103
4030d8  test    ebx, ebx
4030da  je      0x403268
402165  mov     rax, qword  ptr  [rsp+0x10]
40216a  cmp     byte  ptr  [rax+rbp], 0x0
40216e  setne   r12b

402172  test    r12b, r12b
402175  je      0x4027d0
402172  test    r12b, r12b
402175  je      0x4027d0
402123  lea     rax,  [0x404bad]
40212a  mov     qword  ptr  [rsp+0x18], 0x1
402133  xor     r15d, r15d
402136  mov     dword  ptr  [rsp+0x8], 0x2
40213e  mov     qword  ptr  [rsp+0x48], rax

402143  xor     r11d, r11d
402146  mov     rax, rbp
402149  mov     r8d, r12d
40214c  mov     rbp, r11
40214f  mov     r11, rax
402152  nop     word  ptr  [rax+rax]

402158  cmp     r11, rbp
40215b  setne   r12b
40215f  cmp     r11, -0x1
402163  jne     0x402172
402143  xor     r11d, r11d
402146  mov     rax, rbp
402149  mov     r8d, r12d
40214c  mov     rbp, r11
40214f  mov     r11, rax
402152  nop     word  ptr  [rax+rax]

402158  cmp     r11, rbp
40215b  setne   r12b
40215f  cmp     r11, -0x1
402163  jne     0x402172
402e61  xor     r15d, r15d
402e64  test    ebx, ebx
402e66  je      0x40302d
402e0b  lea     rsi,  [0x404baf]
402e12  xor     edi, edi
402e14  mov     edx, 0x5
402e19  call    dcgettext
402d38  test    r13, r13
402d3b  je      0x402f66
40312d  lea     rax,  [0x404bab]
403134  mov     byte  ptr  [rsp+0xe], 0x1
403139  mov     byte  ptr  [rsp+0x7c], 0x0
40313e  xor     r12d, r12d
403141  mov     qword  ptr  [rsp+0x50], 0x0
40314a  mov     byte  ptr  [rsp+0xf], 0x1
40314f  mov     byte  ptr  [rsp+0xd], 0x1
403154  mov     qword  ptr  [rsp+0x18], 0x1
40315d  xor     r15d, r15d
403160  mov     qword  ptr  [rsp+0x48], rax
403165  jmp     0x402143
402cdc  mov     byte  ptr  [rsp+0xd], 0x1

402ce1  test    r13, r13
402ce4  jne     0x40327a
403268  mov     byte  ptr  [rsp+0xd], 0x0
40326d  jmp     0x402ce1
4030e0  lea     rax,  [0x404bad]
4030e7  mov     byte  ptr  [rsp+0xe], 0x1
4030ec  mov     byte  ptr  [rsp+0x7c], 0x0
4030f1  xor     r12d, r12d
4030f4  mov     qword  ptr  [rsp+0x50], 0x0
4030fd  mov     byte  ptr  [rsp+0xf], 0x1
403102  mov     byte  ptr  [rsp+0xd], 0x0
403107  mov     qword  ptr  [rsp+0x18], 0x1
403110  xor     r15d, r15d
403113  mov     qword  ptr  [rsp+0x48], rax
403118  jmp     0x402143
4027d0  cmp     dword  ptr  [rsp+0x8], 0x2
4027d5  movzx   ebx, byte  ptr  [rsp+0xf]
4027da  mov     r12d, r8d
4027dd  mov     rbp, r11
4027e0  sete    dl
4027e3  mov     eax, ebx
4027e5  test    r15, r15
4027e8  sete    cl
4027eb  and     eax, edx
4027ed  and     al, cl
4027ef  jne     0x403256
40217b  cmp     dword  ptr  [rsp+0x8], 0x2
402180  mov     rdi, qword  ptr  [rsp+0x10]
402185  lea     r9,  [rdi+rbp]
402189  setne   al
40218c  and     al, byte  ptr  [rsp+0xd]
402190  mov     r10d, eax
402193  je      0x402240
40302d  mov     rdx, qword  ptr  [rsp+0x68]
403032  movzx   eax, byte  ptr  [rdx]
403035  test    al, al
403037  je      0x402e6c
402e6c  test    ebx, ebx
402e6e  mov     rbx, qword  ptr  [rsp+0x60]
402e73  setne   byte  ptr  [rsp+0xf]
402e78  xor     r12d, r12d
402e7b  mov     rdi, rbx
402e7e  call    strlen
402e1e  mov     rcx, rax
402e21  mov     qword  ptr  [rsp+0x68], rax
402e26  lea     rax,  [0x404baf]
402e2d  cmp     rcx, rax
402e30  je      0x4031ce
402f66  mov     qword  ptr  [rsp+0x50], 0x0
402f6f  mov     byte  ptr  [rsp+0xe], 0x1
402f74  xor     r12d, r12d
402f77  mov     byte  ptr  [rsp+0x7c], 0x0
402f7c  jmp     0x402d5b
402d41  mov     byte  ptr  [r14], 0x22
402d45  mov     byte  ptr  [rsp+0xe], 0x1
402d4a  xor     r12d, r12d
402d4d  mov     byte  ptr  [rsp+0x7c], 0x0
402d52  mov     qword  ptr  [rsp+0x50], 0x0

402d5b  lea     rax,  [0x404bab]
402d62  mov     byte  ptr  [rsp+0xf], 0x0
402d67  mov     byte  ptr  [rsp+0xd], 0x1
402d6c  mov     qword  ptr  [rsp+0x18], 0x1
402d75  mov     r15d, 0x1
402d7b  mov     qword  ptr  [rsp+0x48], rax
402d80  jmp     0x402143
402cea  lea     rax,  [0x404bad]
402cf1  mov     qword  ptr  [rsp+0x50], 0x0
402cfa  mov     byte  ptr  [rsp+0xe], 0x1
402cff  mov     byte  ptr  [rsp+0x7c], 0x0
402d04  xor     r12d, r12d
402d07  mov     byte  ptr  [rsp+0xf], 0x0
402d0c  mov     qword  ptr  [rsp+0x18], 0x1
402d15  mov     qword  ptr  [rsp+0x48], rax
402d1a  mov     r15d, 0x1
402d20  mov     dword  ptr  [rsp+0x8], 0x2
402d28  jmp     0x402143
40327a  mov     byte  ptr  [rsp+0xe], 0x1
40327f  xor     eax, eax
403281  xor     r12d, r12d
403284  mov     qword  ptr  [rsp+0x50], 0x0
40328d  jmp     0x402834
402ce1  test    r13, r13
402ce4  jne     0x40327a
4027f5  mov     eax, ebx
4027f7  xor     eax, 0x1
4027fa  and     dl, al
4027fc  je      0x40316c
403256  mov     dword  ptr  [rsp+0x8], 0x2
40325e  jmp     0x402bf9
402240  movzx   ebx, byte  ptr  [r9]
402244  cmp     bl, 0x7e
402247  ja      0x402568
402199  mov     rax, qword  ptr  [rsp+0x18]
40219e  test    rax, rax
4021a1  je      0x4025d0
40303d  nop     dword  ptr  [rax]
402e83  mov     qword  ptr  [rsp+0x48], rbx
402e88  mov     qword  ptr  [rsp+0x18], rax
402e8d  mov     byte  ptr  [rsp+0xe], 0x1
402e92  mov     byte  ptr  [rsp+0x7c], 0x0
402e97  mov     qword  ptr  [rsp+0x50], 0x0
402ea0  mov     byte  ptr  [rsp+0xd], 0x1
402ea5  jmp     0x402143
4031ce  mov     esi, dword  ptr  [rsp+0x8]
4031d2  mov     rdi, rcx
4031d5  call    gettext_quote.part.1
402e36  lea     rsi,  [0x404bad]
402e3d  xor     edi, edi
402e3f  mov     edx, 0x5
402e44  call    dcgettext
402d5b  lea     rax,  [0x404bab]
402d62  mov     byte  ptr  [rsp+0xf], 0x0
402d67  mov     byte  ptr  [rsp+0xd], 0x1
402d6c  mov     qword  ptr  [rsp+0x18], 0x1
402d75  mov     r15d, 0x1
402d7b  mov     qword  ptr  [rsp+0x48], rax
402d80  jmp     0x402143
402834  lea     rbx,  [0x404bad]
40283b  mov     byte  ptr  [r14], 0x27
40283f  mov     dword  ptr  [rsp+0x8], 0x2
402847  mov     r15d, 0x1
40284d  mov     qword  ptr  [rsp+0x18], 0x1
402856  mov     byte  ptr  [rsp+0xf], 0x0
40285b  mov     qword  ptr  [rsp+0x48], rbx
402860  mov     byte  ptr  [rsp+0x7c], al
402864  jmp     0x402143
40316c  mov     rbx, qword  ptr  [rsp+0x48]
403171  test    rbx, rbx
403174  je      0x4031a2
402802  cmp     byte  ptr  [rsp+0x7c], 0x0
402807  je      0x40316a
402bf9  cmp     byte  ptr  [rsp+0xd], 0x0
402bfe  je      0x402c10
40224d  lea     rcx,  [0x404c2c]
402254  movzx   edx, bl
402257  movsxd  rax, dword  ptr  [rcx+rdx*0x4]
40225b  add     rax, rcx
40225e  jmp     rax
402568  cmp     qword  ptr  [rsp+0x58], 0x1
40256e  jne     0x402918
4025d0  movzx   ebx, byte  ptr  [r9]
4025d4  cmp     bl, 0x7e
4025d7  ja      0x402560
4021a7  cmp     r11, -0x1
4021ab  lea     rbx,  [rbp+rax]
4021b0  jne     0x4021e0
403040  cmp     r13, r15
403043  jbe     0x403049
4031da  mov     qword  ptr  [rsp+0x68], rax
4031df  jmp     0x402e36
402e49  mov     rcx, rax
402e4c  mov     qword  ptr  [rsp+0x60], rax
402e51  lea     rax,  [0x404bad]
402e58  cmp     rcx, rax
402e5b  je      0x4031e4
4031a2  cmp     r13, r15
4031a5  jbe     0x402c49
403176  test    al, al
403178  je      0x4031a2
40316a  mov     eax, edx

40316c  mov     rbx, qword  ptr  [rsp+0x48]
403171  test    rbx, rbx
403174  je      0x4031a2
40280d  cmp     byte  ptr  [rsp+0xe], 0x0
402812  jne     0x40320d
402c10  sub     rsp, 0x8
402c14  mov     rcx, rbp
402c17  mov     rsi, r13
402c1a  push    qword  ptr  [rsp+0x68]
402c1e  push    qword  ptr  [rsp+0x78]
402c22  mov     rdi, r14
402c25  push    0x0
402c27  mov     r9d, dword  ptr  [rsp+0x98]
402c2f  mov     r8d, dword  ptr  [rsp+0x28]
402c34  mov     rdx, qword  ptr  [rsp+0x30]
402c39  and     r9d, 0xfffffffd
402c3d  call    quotearg_buffer_restyled
402c00  test    al, al
402c02  mov     eax, 0x4
402c07  cmove   eax, dword  ptr  [rsp+0x8]
402c0c  mov     dword  ptr  [rsp+0x8], eax

402c10  sub     rsp, 0x8
402c14  mov     rcx, rbp
402c17  mov     rsi, r13
402c1a  push    qword  ptr  [rsp+0x68]
402c1e  push    qword  ptr  [rsp+0x78]
402c22  mov     rdi, r14
402c25  push    0x0
402c27  mov     r9d, dword  ptr  [rsp+0x98]
402c2f  mov     r8d, dword  ptr  [rsp+0x28]
402c34  mov     rdx, qword  ptr  [rsp+0x30]
402c39  and     r9d, 0xfffffffd
402c3d  call    quotearg_buffer_restyled
402480  cmp     byte  ptr  [rsp+0xd], 0x0
402485  jne     0x402653
4024c0  mov     edx, 0x7
4024c5  mov     ebx, 0x61
4024ca  jmp     0x4023a4
402540  mov     edx, 0xb
402545  mov     ebx, 0x76
40254a  jmp     0x4023a4
402520  mov     edx, 0xd
402525  mov     ebx, 0x72
40252a  jmp     0x402392
402500  cmp     dword  ptr  [rsp+0x8], 0x2
402505  sete    dl
402508  xor     r12d, r12d
40250b  jmp     0x4024e1
402363  cmp     dword  ptr  [rsp+0x8], 0x2
402368  je      0x402870
402263  cmp     r11, 0x1
402267  setne   al
40226a  cmp     r11, -0x1
40226e  jne     0x40227c
402388  mov     edx, 0x9
40238d  mov     ebx, 0x74

402392  cmp     dword  ptr  [rsp+0x8], 0x2
402397  sete    al
40239a  and     al, byte  ptr  [rsp+0xf]
40239e  jne     0x4024ee
4023c8  mov     edx, 0x8
4023cd  mov     ebx, 0x62
4023d2  jmp     0x4023a4
4024a8  cmp     dword  ptr  [rsp+0x8], 0x2
4024ad  sete    dl
4024b0  xor     eax, eax
4024b2  jmp     0x402298
402550  mov     edx, 0xa
402555  mov     ebx, 0x6e
40255a  jmp     0x402392
402530  mov     edx, 0xc
402535  mov     ebx, 0x66
40253a  jmp     0x4023a4
402510  cmp     dword  ptr  [rsp+0x8], 0x2
402515  mov     ebx, 0x20
40251a  sete    dl
40251d  jmp     0x4024e1
4024d0  cmp     dword  ptr  [rsp+0x8], 0x2
4024d5  sete    dl

4024d8  test    rbp, rbp
4024db  jne     0x40228c
402333  mov     eax, dword  ptr  [rsp+0x8]
402337  cmp     eax, 0x2
40233a  je      0x4028f8
4023d8  cmp     dword  ptr  [rsp+0x8], 0x2
4023dd  je      0x4027b0
402574  mov     qword  ptr  [rsp+0x38], r11
402579  mov     byte  ptr  [rsp+0x30], r8b
40257e  mov     byte  ptr  [rsp+0x28], r10b
402583  call    __ctype_b_loc
402918  lea     rax,  [rsp+0xa0]
402920  cmp     r11, -0x1
402924  mov     qword  ptr  [rsp+0xa0], 0x0
402930  mov     qword  ptr  [rsp+0x28], rax
402935  jne     0x402964
4025d9  lea     rcx,  [0x404e28]
4025e0  movzx   edx, bl
4025e3  movsxd  rax, dword  ptr  [rcx+rdx*0x4]
4025e7  add     rax, rcx
4025ea  jmp     rax
402560  xor     r10d, r10d
402563  nop     dword  ptr  [rax+rax]

402568  cmp     qword  ptr  [rsp+0x58], 0x1
40256e  jne     0x402918
4021b2  cmp     rax, 0x1
4021b6  jbe     0x4021e0
4021e0  cmp     rbx, r11
4021e3  mov     byte  ptr  [rsp+0x28], r10b
4021e8  ja      0x4027a0
403049  add     r15, 0x1
40304d  movzx   eax, byte  ptr  [rdx+r15]
403052  test    al, al
403054  jne     0x403040
403045  mov     byte  ptr  [r14+r15], al

403049  add     r15, 0x1
40304d  movzx   eax, byte  ptr  [rdx+r15]
403052  test    al, al
403054  jne     0x403040
4031e4  mov     esi, dword  ptr  [rsp+0x8]
4031e8  mov     rdi, rcx
4031eb  call    gettext_quote.part.1
402c49  mov     rbx, qword  ptr  [rsp+0xa8]
402c51  xor     rbx, qword  ptr   fs:[0x28]
402c5a  mov     rax, r15
402c5d  jne     0x403263
4031ab  mov     byte  ptr  [r14+r15], 0x0
4031b0  jmp     0x402c49
40317a  movzx   ecx, byte  ptr  [rbx]
40317d  mov     rax, rbx
403180  test    cl, cl
403182  je      0x4031a2
402818  test    r13, r13
40281b  sete    al
40281e  cmp     qword  ptr  [rsp+0x50], 0x0
402824  setne   dl
402827  and     al, dl
402829  je      0x40324c
40320d  sub     rsp, 0x8
403211  mov     r8d, 0x5
403217  mov     rcx, r11
40321a  push    qword  ptr  [rsp+0x68]
40321e  push    qword  ptr  [rsp+0x78]
403222  mov     rdi, r14
403225  push    qword  ptr  [rsp+0x38]
403229  mov     r9d, dword  ptr  [rsp+0x98]
403231  mov     rdx, qword  ptr  [rsp+0x30]
403236  mov     rsi, qword  ptr  [rsp+0x70]
40323b  call    quotearg_buffer_restyled
402c42  add     rsp, 0x20
402c46  mov     r15, rax

402c49  mov     rbx, qword  ptr  [rsp+0xa8]
402c51  xor     rbx, qword  ptr   fs:[0x28]
402c5a  mov     rax, r15
402c5d  jne     0x403263
40248b  xor     edx, edx
40248d  test    byte  ptr  [rsp+0x78], 0x1
402492  je      0x4023ab
402653  cmp     dword  ptr  [rsp+0x8], 0x2
402658  sete    dl
40265b  cmp     byte  ptr  [rsp+0xf], 0x0
402660  jne     0x4031fa
4023a4  cmp     byte  ptr  [rsp+0xd], 0x0
4023a9  jne     0x402410
402392  cmp     dword  ptr  [rsp+0x8], 0x2
402397  sete    al
40239a  and     al, byte  ptr  [rsp+0xf]
40239e  jne     0x4024ee
4024e1  movzx   eax, byte  ptr  [rsp+0xf]
4024e6  and     al, dl
4024e8  je      0x402298
402870  cmp     byte  ptr  [rsp+0xf], 0x0
402875  jne     0x403120
40236e  mov     byte  ptr  [rsp+0x7c], r12b
402373  xor     edx, edx
402375  xor     eax, eax
402377  mov     ebx, 0x27
40237c  jmp     0x402298
402270  mov     rax, qword  ptr  [rsp+0x10]
402275  cmp     byte  ptr  [rax+0x1], 0x0
402279  setne   al

40227c  cmp     dword  ptr  [rsp+0x8], 0x2
402281  sete    dl
402284  test    al, al
402286  je      0x4024d8
40227c  cmp     dword  ptr  [rsp+0x8], 0x2
402281  sete    dl
402284  test    al, al
402286  je      0x4024d8
4024ee  mov     rbp, r11
4024f1  mov     dword  ptr  [rsp+0x8], 0x2
4024f9  jmp     0x402bf9
402298  cmp     byte  ptr  [rsp+0xd], 0x1
40229d  jne     0x4023b2
40228c  xor     r12d, r12d
40228f  xor     eax, eax
402291  nop     dword  ptr  [rax]

402298  cmp     byte  ptr  [rsp+0xd], 0x1
40229d  jne     0x4023b2
4028f8  cmp     byte  ptr  [rsp+0xf], 0x0
4028fd  jne     0x403120
402340  cmp     eax, 0x5
402343  je      0x4028b8
4027b0  cmp     byte  ptr  [rsp+0xf], 0x0
4027b5  jne     0x403120
4023e3  cmp     byte  ptr  [rsp+0xd], 0x0
4023e8  je      0x402600
402588  mov     rcx, qword  ptr  [rax]
40258b  movzx   edx, bl
40258e  movzx   r10d, byte  ptr  [rsp+0x28]
402594  movzx   r8d, byte  ptr  [rsp+0x30]
40259a  mov     r11, qword  ptr  [rsp+0x38]
40259f  mov     edi, 0x1
4025a4  movzx   eax, word  ptr  [rcx+rdx*0x2]
4025a8  and     ax, 0x4000
4025ac  setne   r12b
4025b0  sete    al
4025b3  and     al, byte  ptr  [rsp+0xd]

4025b7  test    al, al
4025b9  jne     0x402f51
402937  mov     rdi, qword  ptr  [rsp+0x10]
40293c  mov     byte  ptr  [rsp+0x40], r8b
402941  mov     byte  ptr  [rsp+0x38], r10b
402946  mov     qword  ptr  [rsp+0x30], r9
40294b  call    strlen
402964  lea     rax,  [rsp+0x9c]
40296c  xor     ecx, ecx
40296e  mov     byte  ptr  [rsp+0x7e], bl
402972  mov     byte  ptr  [rsp+0x7d], r8b
402977  mov     rbx, rcx
40297a  mov     qword  ptr  [rsp+0x88], r9
402982  mov     qword  ptr  [rsp+0x38], rax
402987  mov     byte  ptr  [rsp+0x7f], r10b
40298c  mov     qword  ptr  [rsp+0x80], r15
402994  mov     qword  ptr  [rsp+0x40], r14
402999  mov     qword  ptr  [rsp+0x70], r13
40299e  mov     qword  ptr  [rsp+0x30], r11

4029a3  mov     rax, qword  ptr  [rsp+0x10]
4029a8  lea     r14,  [rbp+rbx]
4029ad  mov     rdx, qword  ptr  [rsp+0x30]
4029b2  mov     rcx, qword  ptr  [rsp+0x28]
4029b7  mov     rdi, qword  ptr  [rsp+0x38]
4029bc  lea     r13,  [rax+r14]
4029c0  sub     rdx, r14
4029c3  mov     rsi, r13
4029c6  call    rpl_mbrtowc
402640  mov     ebx, 0x61
402645  jmp     0x402410
402720  cmp     dword  ptr  [rsp+0x8], 0x2
402725  sete    dl
402728  xor     r10d, r10d
40272b  xor     r12d, r12d
40272e  jmp     0x4024e1
402360  xor     r10d, r10d

402363  cmp     dword  ptr  [rsp+0x8], 0x2
402368  je      0x402870
402260  xor     r10d, r10d

402263  cmp     r11, 0x1
402267  setne   al
40226a  cmp     r11, -0x1
40226e  jne     0x40227c
402628  mov     edx, 0xa
40262d  xor     r10d, r10d
402630  mov     ebx, 0x6e
402635  jmp     0x402392
402768  mov     ebx, 0x76
40276d  jmp     0x402410
402708  cmp     dword  ptr  [rsp+0x8], 0x2
40270d  sete    dl
402710  xor     r10d, r10d
402713  jmp     0x4024d8
402650  xor     r10d, r10d

402653  cmp     dword  ptr  [rsp+0x8], 0x2
402658  sete    dl
40265b  cmp     byte  ptr  [rsp+0xf], 0x0
402660  jne     0x4031fa
402790  mov     ebx, 0x62
402795  jmp     0x402410
402610  mov     edx, 0xc
402615  xor     r10d, r10d
402618  mov     ebx, 0x66
40261d  jmp     0x4023a4
402750  mov     edx, 0xd
402755  xor     r10d, r10d
402758  mov     ebx, 0x72
40275d  jmp     0x402392
402738  cmp     dword  ptr  [rsp+0x8], 0x2
40273d  mov     r12d, r10d
402740  mov     ebx, 0x20
402745  sete    dl
402748  xor     r10d, r10d
40274b  jmp     0x4024e1
4026f0  cmp     dword  ptr  [rsp+0x8], 0x2
4026f5  mov     r12d, r10d
4026f8  sete    dl
4026fb  xor     r10d, r10d
4026fe  xor     eax, eax
402700  jmp     0x402298
402330  xor     r10d, r10d

402333  mov     eax, dword  ptr  [rsp+0x8]
402337  cmp     eax, 0x2
40233a  je      0x4028f8
4025f0  xor     r10d, r10d
4025f3  cmp     byte  ptr  [rsp+0xd], 0x0
4025f8  jne     0x4023ee
402778  mov     edx, 0x9
40277d  xor     r10d, r10d
402780  mov     ebx, 0x74
402785  jmp     0x402392
4021b8  mov     byte  ptr  [rsp+0x38], r8b
4021bd  mov     byte  ptr  [rsp+0x30], r10b
4021c2  mov     qword  ptr  [rsp+0x28], r9
4021c7  call    strlen
4021ee  mov     rdx, qword  ptr  [rsp+0x18]
4021f3  mov     rsi, qword  ptr  [rsp+0x48]
4021f8  mov     rdi, r9
4021fb  mov     qword  ptr  [rsp+0x40], r11
402200  mov     byte  ptr  [rsp+0x38], r8b
402205  mov     qword  ptr  [rsp+0x30], r9
40220a  call    memcmp
4027a0  xor     r10d, r10d
4027a3  jmp     0x402240
403056  jmp     0x402e6c
4031f0  mov     qword  ptr  [rsp+0x60], rax
4031f5  jmp     0x402e61
402c63  add     rsp, 0xb8
402c6a  pop     rbx
402c6b  pop     rbp
402c6c  pop     r12
402c6e  pop     r13
402c70  pop     r14
402c72  pop     r15
402c74  ret     
403263  call    __stack_chk_fail
403184  mov     rdx, r15
403187  sub     rax, r15

40318a  cmp     r13, rdx
40318d  jbe     0x403193
40324c  movzx   eax, byte  ptr  [rsp+0x7c]
403251  jmp     0x40316c
40282f  mov     r13, qword  ptr  [rsp+0x50]

402834  lea     rbx,  [0x404bad]
40283b  mov     byte  ptr  [r14], 0x27
40283f  mov     dword  ptr  [rsp+0x8], 0x2
402847  mov     r15d, 0x1
40284d  mov     qword  ptr  [rsp+0x18], 0x1
402856  mov     byte  ptr  [rsp+0xf], 0x0
40285b  mov     qword  ptr  [rsp+0x48], rbx
402860  mov     byte  ptr  [rsp+0x7c], al
402864  jmp     0x402143
403240  add     rsp, 0x20
403244  mov     r15, rax
403247  jmp     0x402c49
4023ab  mov     ebx, edx
4023ad  xor     r12d, r12d
4023b0  xor     eax, eax

4023b2  cmp     byte  ptr  [rsp+0xf], 0x0
4023b7  jne     0x4022ab
402498  add     rbp, 0x1
40249c  jmp     0x402158
402666  mov     eax, r8d
402669  mov     rcx, r15
40266c  xor     eax, 0x1
40266f  and     al, dl
402671  je      0x4026a0
4031fa  movzx   ebx, byte  ptr  [rsp+0xf]
4031ff  mov     rbp, r11
403202  mov     eax, edx
403204  mov     byte  ptr  [rsp+0xd], bl
403208  jmp     0x402bf9
402410  xor     r12d, r12d

402413  cmp     dword  ptr  [rsp+0x8], 0x2
402418  sete    dl
40241b  cmp     byte  ptr  [rsp+0xf], 0x0
402420  mov     eax, edx
402422  jne     0x402c78
40287b  test    r13, r13
40287e  je      0x402c80
403120  mov     rbp, r11
403123  movzx   eax, byte  ptr  [rsp+0xf]
403128  jmp     0x402bf9
4024d8  test    rbp, rbp
4024db  jne     0x40228c
4022a3  test    dl, dl
4022a5  jne     0x4023b2
4023b2  cmp     byte  ptr  [rsp+0xf], 0x0
4023b7  jne     0x4022ab
402903  xor     r12d, r12d
402906  xor     eax, eax
402908  mov     ebx, 0x3f
40290d  jmp     0x4022c9
4028b8  test    byte  ptr  [rsp+0x78], 0x4
4028bd  je      0x4028e0
402349  cmp     eax, 0x2
40234c  mov     ebx, 0x3f
402351  sete    dl
402354  xor     r12d, r12d
402357  xor     eax, eax
402359  jmp     0x402298
4027bb  add     rbp, 0x1
4027bf  mov     eax, r8d
4027c2  xor     r12d, r12d
4027c5  mov     ebx, 0x5c
4027ca  jmp     0x4022dc
402600  mov     edx, 0x5c
402605  mov     ebx, 0x5c
40260a  jmp     0x4023a4
4023ee  cmp     byte  ptr  [rsp+0xf], 0x0
4023f3  je      0x402600
4025bf  cmp     dword  ptr  [rsp+0x8], 0x2
4025c4  sete    dl
4025c7  jmp     0x402298
402f51  movzx   edx, byte  ptr  [rsp+0xd]
402f56  xor     r12d, r12d
402f59  jmp     0x402a60
402950  movzx   r8d, byte  ptr  [rsp+0x40]
402956  movzx   r10d, byte  ptr  [rsp+0x38]
40295c  mov     r11, rax
40295f  mov     r9, qword  ptr  [rsp+0x30]

402964  lea     rax,  [rsp+0x9c]
40296c  xor     ecx, ecx
40296e  mov     byte  ptr  [rsp+0x7e], bl
402972  mov     byte  ptr  [rsp+0x7d], r8b
402977  mov     rbx, rcx
40297a  mov     qword  ptr  [rsp+0x88], r9
402982  mov     qword  ptr  [rsp+0x38], rax
402987  mov     byte  ptr  [rsp+0x7f], r10b
40298c  mov     qword  ptr  [rsp+0x80], r15
402994  mov     qword  ptr  [rsp+0x40], r14
402999  mov     qword  ptr  [rsp+0x70], r13
40299e  mov     qword  ptr  [rsp+0x30], r11

4029a3  mov     rax, qword  ptr  [rsp+0x10]
4029a8  lea     r14,  [rbp+rbx]
4029ad  mov     rdx, qword  ptr  [rsp+0x30]
4029b2  mov     rcx, qword  ptr  [rsp+0x28]
4029b7  mov     rdi, qword  ptr  [rsp+0x38]
4029bc  lea     r13,  [rax+r14]
4029c0  sub     rdx, r14
4029c3  mov     rsi, r13
4029c6  call    rpl_mbrtowc
4029cb  test    rax, rax
4029ce  mov     r15, rax
4029d1  je      0x402a21
4025fe  nop     
4021cc  movzx   r8d, byte  ptr  [rsp+0x38]
4021d2  movzx   r10d, byte  ptr  [rsp+0x30]
4021d8  mov     r11, rax
4021db  mov     r9, qword  ptr  [rsp+0x28]

4021e0  cmp     rbx, r11
4021e3  mov     byte  ptr  [rsp+0x28], r10b
4021e8  ja      0x4027a0
40220f  test    eax, eax
402211  mov     r9, qword  ptr  [rsp+0x30]
402216  movzx   r8d, byte  ptr  [rsp+0x38]
40221c  mov     r11, qword  ptr  [rsp+0x40]
402221  jne     0x4027a0
403193  add     rdx, 0x1
403197  movzx   ecx, byte  ptr  [rax+rdx]
40319b  test    cl, cl
40319d  jne     0x40318a
40318f  mov     byte  ptr  [r14+rdx], cl

403193  add     rdx, 0x1
403197  movzx   ecx, byte  ptr  [rax+rdx]
40319b  test    cl, cl
40319d  jne     0x40318a
4023bd  jmp     0x4022c9
4022ab  mov     rsi, qword  ptr  [rsp+0x20]
4022b0  test    rsi, rsi
4022b3  je      0x4022c9
402158  cmp     r11, rbp
40215b  setne   r12b
40215f  cmp     r11, -0x1
402163  jne     0x402172
4026a0  cmp     r13, rcx
4026a3  jbe     0x4026aa
402673  cmp     r13, r15
402676  jbe     0x40267d
402428  mov     eax, r8d
40242b  xor     eax, 0x1
40242e  and     al, dl
402430  je      0x402461
402c78  mov     rbp, r11
402c7b  jmp     0x402bf9
402c80  cmp     r13, r15
402c83  jbe     0x402c8a
402884  xor     edx, edx
402886  cmp     qword  ptr  [rsp+0x50], 0x0
40288c  jne     0x402c80
4022c9  test    r10b, r10b
4022cc  jne     0x402413
4028e0  xor     edx, edx
4028e2  xor     r12d, r12d
4028e5  xor     eax, eax
4028e7  mov     ebx, 0x3f
4028ec  jmp     0x402298
4028bf  lea     rcx,  [rbp+0x2]
4028c3  cmp     rcx, r11
4028c6  jae     0x4028e0
4022dc  test    al, al
4022de  je      0x402300
4023f9  cmp     qword  ptr  [rsp+0x18], 0x0
4023ff  jne     0x4027bb
402a60  mov     rcx, rdi
402a63  xor     esi, esi
402a65  movzx   r9d, byte  ptr  [rsp+0xf]
402a6b  add     rcx, rbp
402a6e  mov     rdi, qword  ptr  [rsp+0x10]
402a73  jmp     0x402b2e
402a21  mov     edx, r12d
402a24  mov     rdi, rbx
402a27  movzx   r8d, byte  ptr  [rsp+0x7d]
402a2d  xor     edx, 0x1
402a30  movzx   ebx, byte  ptr  [rsp+0x7e]
402a35  movzx   r10d, byte  ptr  [rsp+0x7f]
402a3b  and     dl, byte  ptr  [rsp+0xd]
402a3f  mov     r15, qword  ptr  [rsp+0x80]
402a47  mov     r14, qword  ptr  [rsp+0x40]
402a4c  mov     r13, qword  ptr  [rsp+0x70]
402a51  mov     r11, qword  ptr  [rsp+0x30]

402a56  cmp     rdi, 0x1
402a5a  jbe     0x40305b
4029d3  cmp     rax, -0x1
4029d7  je      0x402ff5
402227  cmp     byte  ptr  [rsp+0xf], 0x0
40222c  movzx   r10d, byte  ptr  [rsp+0x28]
402232  jne     0x4031b5
40319f  mov     r15, rdx

4031a2  cmp     r13, r15
4031a5  jbe     0x402c49
40318a  cmp     r13, rdx
40318d  jbe     0x403193
4022b5  mov     edx, ebx
4022b7  shr     dl, 0x5
4022ba  movzx   edx, dl
4022bd  mov     edx, dword  ptr  [rsi+rdx*0x4]
4022c0  bt      edx, ebx
4022c3  jb      0x402413
4026aa  cmp     dword  ptr  [rsp+0x8], 0x2
4026af  lea     r15,  [rcx+0x1]
4026b3  je      0x402cb9
4026a5  mov     byte  ptr  [r14+rcx], 0x5c

4026aa  cmp     dword  ptr  [rsp+0x8], 0x2
4026af  lea     r15,  [rcx+0x1]
4026b3  je      0x402cb9
40267d  lea     rcx,  [r15+0x1]
402681  cmp     r13, rcx
402684  jbe     0x40268c
402678  mov     byte  ptr  [r14+r15], 0x27

40267d  lea     rcx,  [r15+0x1]
402681  cmp     r13, rcx
402684  jbe     0x40268c
402461  cmp     r13, r15
402464  jbe     0x40246b
402432  cmp     r13, r15
402435  jbe     0x40243c
402c8a  lea     rax,  [r15+0x1]
402c8e  cmp     r13, rax
402c91  jbe     0x402c99
402c85  mov     byte  ptr  [r14+r15], 0x27

402c8a  lea     rax,  [r15+0x1]
402c8e  cmp     r13, rax
402c91  jbe     0x402c99
402892  mov     qword  ptr  [rsp+0x50], r13
402897  add     r15, 0x3
40289b  xor     eax, eax
40289d  mov     byte  ptr  [rsp+0x7c], r12b
4028a2  xor     r8d, r8d
4028a5  mov     r13, rdx
4028a8  mov     ebx, 0x27
4028ad  jmp     0x4022c9
4022d2  xor     eax, 0x1
4022d5  add     rbp, 0x1
4022d9  and     eax, r8d

4022dc  test    al, al
4022de  je      0x402300
402413  cmp     dword  ptr  [rsp+0x8], 0x2
402418  sete    dl
40241b  cmp     byte  ptr  [rsp+0xf], 0x0
402420  mov     eax, edx
402422  jne     0x402c78
4028c8  mov     rax, qword  ptr  [rsp+0x10]
4028cd  cmp     byte  ptr  [rax+rbp+0x1], 0x3f
4028d2  je      0x403062
402300  cmp     r15, r13
402303  jae     0x402309
4022e0  cmp     r13, r15
4022e3  jbe     0x4022ea
402405  mov     ebx, 0x5c
40240a  nop     word  ptr  [rax+rax]

402410  xor     r12d, r12d

402413  cmp     dword  ptr  [rsp+0x8], 0x2
402418  sete    dl
40241b  cmp     byte  ptr  [rsp+0xf], 0x0
402420  mov     eax, edx
402422  jne     0x402c78
402b2e  test    dl, dl
402b30  jne     0x402a80
40305b  mov     eax, edx
40305d  jmp     0x4025b7
402ff5  mov     rdi, rbx
402ff8  movzx   r8d, byte  ptr  [rsp+0x7d]
402ffe  movzx   ebx, byte  ptr  [rsp+0x7e]
403003  movzx   r10d, byte  ptr  [rsp+0x7f]
403009  mov     r15, qword  ptr  [rsp+0x80]
403011  xor     r12d, r12d
403014  mov     r14, qword  ptr  [rsp+0x40]
403019  mov     r13, qword  ptr  [rsp+0x70]
40301e  mov     r11, qword  ptr  [rsp+0x30]
403023  movzx   edx, byte  ptr  [rsp+0xd]
403028  jmp     0x402a56
4029dd  cmp     rax, -0x2
4029e1  je      0x402f81
4031b5  cmp     dword  ptr  [rsp+0x8], 0x2
4031ba  movzx   ebx, byte  ptr  [rsp+0xf]
4031bf  mov     rbp, r11
4031c2  sete    al
4031c5  mov     byte  ptr  [rsp+0xd], bl
4031c9  jmp     0x402bf9
402238  nop     dword  ptr  [rax+rax]
402cb9  mov     eax, r12d
402cbc  mov     ebx, 0x30
402cc1  xor     r12d, r12d
402cc4  jmp     0x4022c9
4026b9  lea     rax,  [rbp+0x1]
4026bd  cmp     rax, r11
4026c0  jae     0x4026db
40268c  lea     rcx,  [r15+0x2]
402690  cmp     r13, rcx
402693  ja      0x402cc9
402686  mov     byte  ptr  [r14+r15+0x1], 0x24

40268c  lea     rcx,  [r15+0x2]
402690  cmp     r13, rcx
402693  ja      0x402cc9
40246b  add     r15, 0x1
40246f  add     rbp, 0x1
402473  jmp     0x402300
402466  mov     byte  ptr  [r14+r15], 0x5c

40246b  add     r15, 0x1
40246f  add     rbp, 0x1
402473  jmp     0x402300
40243c  lea     rdx,  [r15+0x1]
402440  cmp     r13, rdx
402443  jbe     0x40244b
402437  mov     byte  ptr  [r14+r15], 0x27

40243c  lea     rdx,  [r15+0x1]
402440  cmp     r13, rdx
402443  jbe     0x40244b
402c99  lea     rax,  [r15+0x2]
402c9d  cmp     r13, rax
402ca0  jbe     0x403292
402c93  mov     byte  ptr  [r14+r15+0x1], 0x5c

402c99  lea     rax,  [r15+0x2]
402c9d  cmp     r13, rax
402ca0  jbe     0x403292
403062  movzx   ebx, byte  ptr  [rax+rcx]
403066  cmp     bl, 0x3e
403069  ja      0x4028e0
4028d8  nop     dword  ptr  [rax+rax]
402305  mov     byte  ptr  [r14+r15], bl

402309  movzx   edi, byte  ptr  [rsp+0xe]
40230e  add     r15, 0x1
402312  mov     eax, 0x0
402317  test    r12b, r12b
40231a  cmove   edi, eax
40231d  mov     byte  ptr  [rsp+0xe], dil
402322  jmp     0x402158
402309  movzx   edi, byte  ptr  [rsp+0xe]
40230e  add     r15, 0x1
402312  mov     eax, 0x0
402317  test    r12b, r12b
40231a  cmove   edi, eax
40231d  mov     byte  ptr  [rsp+0xe], dil
402322  jmp     0x402158
4022ea  lea     rax,  [r15+0x1]
4022ee  cmp     r13, rax
4022f1  jbe     0x4022f9
4022e5  mov     byte  ptr  [r14+r15], 0x27

4022ea  lea     rax,  [r15+0x1]
4022ee  cmp     r13, rax
4022f1  jbe     0x4022f9
402b36  mov     eax, esi
402b38  xor     eax, 0x1
402b3b  and     eax, r8d
402b3e  test    r10b, r10b
402b41  je      0x402b51
402a80  cmp     dword  ptr  [rsp+0x8], 0x2
402a85  sete    al
402a88  test    r9b, r9b
402a8b  jne     0x402f40
4025b7  test    al, al
4025b9  jne     0x402f51
402a56  cmp     rdi, 0x1
402a5a  jbe     0x40305b
402f81  mov     r11, qword  ptr  [rsp+0x30]
402f86  mov     rsi, r14
402f89  mov     rcx, r13
402f8c  mov     rax, rbx
402f8f  mov     rdi, rbx
402f92  movzx   r8d, byte  ptr  [rsp+0x7d]
402f98  movzx   ebx, byte  ptr  [rsp+0x7e]
402f9d  mov     r9, qword  ptr  [rsp+0x88]
402fa5  cmp     rsi, r11
402fa8  movzx   r10d, byte  ptr  [rsp+0x7f]
402fae  mov     r15, qword  ptr  [rsp+0x80]
402fb6  mov     r14, qword  ptr  [rsp+0x40]
402fbb  mov     r13, qword  ptr  [rsp+0x70]
402fc0  jae     0x402fe8
4029e7  cmp     dword  ptr  [rsp+0x8], 0x2
4029ec  sete    al
4029ef  and     al, byte  ptr  [rsp+0xf]
4029f3  jne     0x402b90
4026c2  mov     rax, qword  ptr  [rsp+0x10]
4026c7  movzx   eax, byte  ptr  [rax+rbp+0x1]
4026cc  mov     byte  ptr  [rsp+0x28], al
4026d0  sub     eax, 0x30
4026d3  cmp     al, 0x9
4026d5  jbe     0x402f09
4026db  mov     eax, r12d
4026de  mov     ebx, 0x30
4026e3  xor     r12d, r12d
4026e6  jmp     0x402298
402699  lea     rcx,  [r15+0x3]
40269d  mov     r8d, eax

4026a0  cmp     r13, rcx
4026a3  jbe     0x4026aa
402cc9  mov     byte  ptr  [r14+r15+0x2], 0x27
402ccf  jmp     0x402699
40244b  lea     rdx,  [r15+0x2]
40244f  cmp     r13, rdx
402452  jbe     0x40245a
402445  mov     byte  ptr  [r14+r15+0x1], 0x24

40244b  lea     rdx,  [r15+0x2]
40244f  cmp     r13, rdx
402452  jbe     0x40245a
403292  mov     rdx, r13
403295  mov     r13, qword  ptr  [rsp+0x50]
40329a  jmp     0x402892
402ca6  mov     rdx, r13
402ca9  mov     byte  ptr  [r14+r15+0x2], 0x27
402caf  mov     r13, qword  ptr  [rsp+0x50]
402cb4  jmp     0x402892
40306f  movabs  rax, 0x7000a38200000000
403079  bt      rax, rbx
40307d  jae     0x4028e0
4022f9  add     r15, 0x2
4022fd  xor     r8d, r8d

402300  cmp     r15, r13
402303  jae     0x402309
4022f3  mov     byte  ptr  [r14+r15+0x1], 0x27

4022f9  add     r15, 0x2
4022fd  xor     r8d, r8d

402300  cmp     r15, r13
402303  jae     0x402309
402b51  add     rbp, 0x1
402b55  cmp     rbp, rcx
402b58  jae     0x4022dc
402b43  cmp     r13, r15
402b46  jbe     0x402b4d
402a91  mov     esi, r8d
402a94  xor     esi, 0x1
402a97  and     al, sil
402a9a  je      0x402acb
402f40  movzx   ebx, byte  ptr  [rsp+0xf]
402f45  mov     rbp, r11
402f48  mov     byte  ptr  [rsp+0xd], bl
402f4c  jmp     0x402bf9
402fc2  cmp     byte  ptr  [rcx], 0x0
402fc5  jne     0x402fd7
402fe8  movzx   edx, byte  ptr  [rsp+0xd]
402fed  xor     r12d, r12d
402ff0  jmp     0x402a56
4029f9  mov     edi, dword  ptr  [rsp+0x9c]
402a00  call    iswprint
402b90  cmp     r15, 0x1
402b94  je      0x4029f9
402f09  cmp     r13, r15
402f0c  jbe     0x402f13
40245a  add     r15, 0x3
40245e  mov     r8d, eax

402461  cmp     r13, r15
402464  jbe     0x40246b
402454  mov     byte  ptr  [r14+r15+0x2], 0x27

40245a  add     r15, 0x3
40245e  mov     r8d, eax

402461  cmp     r13, r15
402464  jbe     0x40246b
403083  cmp     byte  ptr  [rsp+0xf], 0x0
403088  jne     0x403272
402b5e  test    al, al
402b60  je      0x402f5e
402b4d  add     r15, 0x1

402b51  add     rbp, 0x1
402b55  cmp     rbp, rcx
402b58  jae     0x4022dc
402b48  mov     byte  ptr  [r14+r15], 0x5c

402b4d  add     r15, 0x1

402b51  add     rbp, 0x1
402b55  cmp     rbp, rcx
402b58  jae     0x4022dc
402acb  cmp     r13, r15
402ace  jbe     0x402ad5
402a9c  cmp     r13, r15
402a9f  jbe     0x402aa6
402fc7  jmp     0x402fe8
402fd7  add     rax, 0x1
402fdb  lea     rdx,  [rbp+rax]
402fe0  cmp     r11, rdx
402fe3  ja      0x402fd0
402a05  mov     rdi, qword  ptr  [rsp+0x28]
402a0a  test    eax, eax
402a0c  mov     eax, 0x0
402a11  cmove   r12d, eax
402a15  add     rbx, r15
402a18  call    mbsinit
402b9a  mov     rdi, qword  ptr  [rsp+0x10]
402b9f  lea     rcx,  [rdi+r15]
402ba3  lea     rdx,  [rdi+r14+0x1]
402ba8  lea     r8,  [rcx+r14]
402bac  jmp     0x402bbd
402f13  lea     rax,  [rcx+0x2]
402f17  cmp     r13, rax
402f1a  jbe     0x402f22
402f0e  mov     byte  ptr  [r14+r15], 0x30

402f13  lea     rax,  [rcx+0x2]
402f17  cmp     r13, rax
402f1a  jbe     0x402f22
40308e  cmp     r13, r15
403091  jbe     0x403098
403272  mov     rbp, r11
403275  jmp     0x402c10
402f5e  xor     r10d, r10d
402f61  jmp     0x402b1d
402b66  cmp     r13, r15
402b69  jbe     0x402b70
402ad5  lea     rax,  [r15+0x1]
402ad9  cmp     r13, rax
402adc  jbe     0x402aeb
402ad0  mov     byte  ptr  [r14+r15], 0x5c

402ad5  lea     rax,  [r15+0x1]
402ad9  cmp     r13, rax
402adc  jbe     0x402aeb
402aa6  lea     rsi,  [r15+0x1]
402aaa  cmp     r13, rsi
402aad  jbe     0x402ab5
402aa1  mov     byte  ptr  [r14+r15], 0x27

402aa6  lea     rsi,  [r15+0x1]
402aaa  cmp     r13, rsi
402aad  jbe     0x402ab5
402fe5  mov     rdi, rax

402fe8  movzx   edx, byte  ptr  [rsp+0xd]
402fed  xor     r12d, r12d
402ff0  jmp     0x402a56
402fd0  cmp     byte  ptr  [r9+rax], 0x0
402fd5  je      0x402fe5
402a1d  test    eax, eax
402a1f  je      0x4029a3
402bbd  movzx   ecx, byte  ptr  [rdx]
402bc0  sub     ecx, 0x5b
402bc3  cmp     cl, 0x21
402bc6  ja      0x402bb0
402f22  mov     eax, r12d
402f25  lea     r15,  [rcx+0x3]
402f29  xor     r12d, r12d
402f2c  mov     ebx, 0x30
402f31  jmp     0x402298
402f1c  mov     byte  ptr  [r14+rcx+0x2], 0x30

402f22  mov     eax, r12d
402f25  lea     r15,  [rcx+0x3]
402f29  xor     r12d, r12d
402f2c  mov     ebx, 0x30
402f31  jmp     0x402298
403098  lea     rax,  [r15+0x1]
40309c  cmp     r13, rax
40309f  jbe     0x4030a7
403093  mov     byte  ptr  [r14+r15], 0x3f

403098  lea     rax,  [r15+0x1]
40309c  cmp     r13, rax
40309f  jbe     0x4030a7
402b1d  cmp     r13, r15
402b20  jbe     0x402b26
402b70  lea     rax,  [r15+0x1]
402b74  cmp     r13, rax
402b77  jbe     0x402b7f
402b6b  mov     byte  ptr  [r14+r15], 0x27

402b70  lea     rax,  [r15+0x1]
402b74  cmp     r13, rax
402b77  jbe     0x402b7f
402aeb  lea     rax,  [r15+0x2]
402aef  cmp     r13, rax
402af2  jbe     0x402b04
402ade  mov     eax, ebx
402ae0  shr     al, 0x6
402ae3  add     eax, 0x30
402ae6  mov     byte  ptr  [r14+r15+0x1], al

402aeb  lea     rax,  [r15+0x2]
402aef  cmp     r13, rax
402af2  jbe     0x402b04
402ab5  lea     rsi,  [r15+0x2]
402ab9  cmp     r13, rsi
402abc  jbe     0x402ac4
402aaf  mov     byte  ptr  [r14+r15+0x1], 0x24

402ab5  lea     rsi,  [r15+0x2]
402ab9  cmp     r13, rsi
402abc  jbe     0x402ac4
4029a3  mov     rax, qword  ptr  [rsp+0x10]
4029a8  lea     r14,  [rbp+rbx]
4029ad  mov     rdx, qword  ptr  [rsp+0x30]
4029b2  mov     rcx, qword  ptr  [rsp+0x28]
4029b7  mov     rdi, qword  ptr  [rsp+0x38]
4029bc  lea     r13,  [rax+r14]
4029c0  sub     rdx, r14
4029c3  mov     rsi, r13
4029c6  call    rpl_mbrtowc
402bc8  mov     esi, 0x1
402bcd  shl     rsi, cl
402bd0  mov     rcx, rsi
402bd3  movabs  rsi, 0x20000002b
402bdd  test    rcx, rsi
402be0  je      0x402bb0
402bb0  add     rdx, 0x1
402bb4  cmp     r8, rdx
402bb7  je      0x4029f9
4030a7  lea     rax,  [r15+0x2]
4030ab  cmp     r13, rax
4030ae  jbe     0x4030b6
4030a1  mov     byte  ptr  [r14+r15+0x1], 0x22

4030a7  lea     rax,  [r15+0x2]
4030ab  cmp     r13, rax
4030ae  jbe     0x4030b6
402b26  movzx   ebx, byte  ptr  [rdi+rbp]
402b2a  add     r15, 0x1

402b2e  test    dl, dl
402b30  jne     0x402a80
402b22  mov     byte  ptr  [r14+r15], bl

402b26  movzx   ebx, byte  ptr  [rdi+rbp]
402b2a  add     r15, 0x1

402b2e  test    dl, dl
402b30  jne     0x402a80
402b7f  add     r15, 0x2
402b83  xor     r10d, r10d
402b86  xor     r8d, r8d
402b89  jmp     0x402b1d
402b79  mov     byte  ptr  [r14+r15+0x1], 0x27

402b7f  add     r15, 0x2
402b83  xor     r10d, r10d
402b86  xor     r8d, r8d
402b89  jmp     0x402b1d
402b04  and     ebx, 0x7
402b07  add     rbp, 0x1
402b0b  add     r15, 0x3
402b0f  add     ebx, 0x30
402b12  cmp     rbp, rcx
402b15  jae     0x402300
402af4  mov     eax, ebx
402af6  shr     al, 0x3
402af9  and     eax, 0x7
402afc  add     eax, 0x30
402aff  mov     byte  ptr  [r14+r15+0x2], al

402b04  and     ebx, 0x7
402b07  add     rbp, 0x1
402b0b  add     r15, 0x3
402b0f  add     ebx, 0x30
402b12  cmp     rbp, rcx
402b15  jae     0x402300
402ac4  add     r15, 0x3
402ac8  mov     r8d, eax

402acb  cmp     r13, r15
402ace  jbe     0x402ad5
402abe  mov     byte  ptr  [r14+r15+0x2], 0x27

402ac4  add     r15, 0x3
402ac8  mov     r8d, eax

402acb  cmp     r13, r15
402ace  jbe     0x402ad5
402be2  mov     r14, qword  ptr  [rsp+0x40]
402be7  mov     r13, qword  ptr  [rsp+0x70]
402bec  mov     rbp, qword  ptr  [rsp+0x30]
402bf1  mov     dword  ptr  [rsp+0x8], 0x2

402bf9  cmp     byte  ptr  [rsp+0xd], 0x0
402bfe  je      0x402c10
4030b6  lea     rax,  [r15+0x3]
4030ba  cmp     r13, rax
4030bd  jbe     0x4030c5
4030b0  mov     byte  ptr  [r14+r15+0x2], 0x22

4030b6  lea     rax,  [r15+0x3]
4030ba  cmp     r13, rax
4030bd  jbe     0x4030c5
402b1b  mov     esi, edx

402b1d  cmp     r13, r15
402b20  jbe     0x402b26
4030c5  add     r15, 0x4
4030c9  xor     edx, edx
4030cb  xor     r12d, r12d
4030ce  xor     eax, eax
4030d0  mov     rbp, rcx
4030d3  jmp     0x402298
4030bf  mov     byte  ptr  [r14+r15+0x3], 0x3f

4030c5  add     r15, 0x4
4030c9  xor     edx, edx
4030cb  xor     r12d, r12d
4030ce  xor     eax, eax
4030d0  mov     rbp, rcx
4030d3  jmp     0x402298
-----function_end-----
-----function_start-----
sub_402327
402327  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_40235e
40235e  nop     
-----function_end-----
-----function_start-----
sub_402381
402381  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_4023c2
4023c2  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_4023d4
4023d4  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_402478
402478  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_4024a1
4024a1  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_4024b7
4024b7  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_4024cf
4024cf  nop     
-----function_end-----
-----function_start-----
sub_4024fe
4024fe  nop     
-----function_end-----
-----function_start-----
sub_40250d
40250d  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_40251f
40251f  nop     
-----function_end-----
-----function_start-----
sub_40252f
40252f  nop     
-----function_end-----
-----function_start-----
sub_40253f
40253f  nop     
-----function_end-----
-----function_start-----
sub_40254f
40254f  nop     
-----function_end-----
-----function_start-----
sub_40255f
40255f  nop     
-----function_end-----
-----function_start-----
sub_4025cc
4025cc  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_4025ec
4025ec  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_40260f
40260f  nop     
-----function_end-----
-----function_start-----
sub_402622
402622  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_40263a
40263a  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_40264a
40264a  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_4026eb
4026eb  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_402705
402705  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_402718
402718  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_402733
402733  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_402762
402762  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_402772
402772  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_40278a
40278a  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_40279a
40279a  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_4027a8
4027a8  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_4027cf
4027cf  nop     
-----function_end-----
-----function_start-----
sub_402869
402869  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_4028b2
4028b2  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_4028f1
4028f1  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_402912
402912  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_402a78
402a78  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_402b8b
402b8b  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_402bae
402bae  nop     
-----function_end-----
-----function_start-----
sub_402c75
402c75  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_402d2d
402d2d  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_402f36
402f36  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
sub_402fc9
402fc9  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_40311d
40311d  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_4032a4
4032a4  nop     
4032a6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quotearg_n_options
        quotearg_n_options:
4032b0  push    r15
4032b2  push    r14
4032b4  movsxd  r15, edi
4032b7  push    r13
4032b9  push    r12
4032bb  mov     r14, rdx
4032be  push    rbp
4032bf  push    rbx
4032c0  mov     rbp, rcx
4032c3  sub     rsp, 0x28
4032c7  mov     qword  ptr  [rsp+0x8], rsi
4032cc  call    __errno_location
4032d1  mov     r13, rax
4032d4  mov     eax, dword  ptr  [rax]
4032d6  test    r15d, r15d
4032d9  mov     rbx,  [slotvec]
4032e0  mov     dword  ptr  [rsp+0x18], eax
4032e4  js      0x403451
403451  call    abort
4032ea  cmp      [nslots], r15d
4032f1  jg      0x403355
4032f3  cmp     r15d, 0x7fffffff
4032fa  je      0x403456
403355  mov     eax, dword  ptr  [rbp+0x4]
403358  shl     r15, 0x4
40335c  sub     rsp, 0x8
403360  add     rbx, r15
403363  lea     r15,  [rbp+0x8]
403367  mov     r8d, dword  ptr  [rbp]
40336b  mov     r11, qword  ptr  [rbx]
40336e  mov     r12, qword  ptr  [rbx+0x8]
403372  mov     rcx, r14
403375  or      eax, 0x1
403378  mov     dword  ptr  [rsp+0x24], eax
40337c  push    qword  ptr  [rbp+0x30]
40337f  mov     r9d, eax
403382  push    qword  ptr  [rbp+0x28]
403385  push    r15
403387  mov     rsi, r11
40338a  mov     rdx, qword  ptr  [rsp+0x28]
40338f  mov     rdi, r12
403392  mov     qword  ptr  [rsp+0x30], r11
403397  call    quotearg_buffer_restyled
403456  call    xalloc_die
403300  lea     r12d,  [r15+0x1]
403304  lea     rax,  [slotvec0]
40330b  movsxd  rsi, r12d
40330e  shl     rsi, 0x4
403312  cmp     rbx, rax
403315  je      0x403430
40339c  add     rsp, 0x20
4033a0  mov     r11, qword  ptr  [rsp+0x10]
4033a5  cmp     r11, rax
4033a8  ja      0x403411
403430  xor     edi, edi
403432  call    xrealloc
40331b  mov     rdi, rbx
40331e  call    xrealloc
4033aa  lea     rsi,  [rax+0x1]
4033ae  lea     rax,  [slot0]
4033b5  cmp     r12, rax
4033b8  mov     qword  ptr  [rbx], rsi
4033bb  je      0x4033cf
403411  mov     eax, dword  ptr  [rsp+0x18]
403415  mov     dword  ptr  [r13], eax
403419  add     rsp, 0x28
40341d  mov     rax, r12
403420  pop     rbx
403421  pop     rbp
403422  pop     r12
403424  pop     r13
403426  pop     r14
403428  pop     r15
40342a  ret     
403437  movdqa  xmm0,  [slotvec0]
40343f  mov     rbx, rax
403442  mov      [slotvec], rax
403449  movups  xmmword  ptr  [rax], xmm0
40344c  jmp     0x40332d
403323  mov     rbx, rax
403326  mov      [slotvec], rax

40332d  movsxd  rdi,  [nslots]
403334  mov     edx, r12d
403337  xor     esi, esi
403339  sub     edx, edi
40333b  shl     rdi, 0x4
40333f  movsxd  rdx, edx
403342  add     rdi, rbx
403345  shl     rdx, 0x4
403349  call    memset
4033cf  mov     rdi, rsi
4033d2  mov     qword  ptr  [rsp+0x10], rsi
4033d7  call    xmalloc
4033bd  mov     rdi, r12
4033c0  mov     qword  ptr  [rsp+0x10], rsi
4033c5  call    free
40332d  movsxd  rdi,  [nslots]
403334  mov     edx, r12d
403337  xor     esi, esi
403339  sub     edx, edi
40333b  shl     rdi, 0x4
40333f  movsxd  rdx, edx
403342  add     rdi, rbx
403345  shl     rdx, 0x4
403349  call    memset
40334e  mov      [nslots], r12d

403355  mov     eax, dword  ptr  [rbp+0x4]
403358  shl     r15, 0x4
40335c  sub     rsp, 0x8
403360  add     rbx, r15
403363  lea     r15,  [rbp+0x8]
403367  mov     r8d, dword  ptr  [rbp]
40336b  mov     r11, qword  ptr  [rbx]
40336e  mov     r12, qword  ptr  [rbx+0x8]
403372  mov     rcx, r14
403375  or      eax, 0x1
403378  mov     dword  ptr  [rsp+0x24], eax
40337c  push    qword  ptr  [rbp+0x30]
40337f  mov     r9d, eax
403382  push    qword  ptr  [rbp+0x28]
403385  push    r15
403387  mov     rsi, r11
40338a  mov     rdx, qword  ptr  [rsp+0x28]
40338f  mov     rdi, r12
403392  mov     qword  ptr  [rsp+0x30], r11
403397  call    quotearg_buffer_restyled
4033dc  sub     rsp, 0x8
4033e0  mov     qword  ptr  [rbx+0x8], rax
4033e4  mov     r8d, dword  ptr  [rbp]
4033e8  push    qword  ptr  [rbp+0x30]
4033eb  push    qword  ptr  [rbp+0x28]
4033ee  mov     rcx, r14
4033f1  push    r15
4033f3  mov     r9d, dword  ptr  [rsp+0x3c]
4033f8  mov     rdi, rax
4033fb  mov     rdx, qword  ptr  [rsp+0x28]
403400  mov     rsi, qword  ptr  [rsp+0x30]
403405  mov     r12, rax
403408  call    quotearg_buffer_restyled
4033ca  mov     rsi, qword  ptr  [rsp+0x10]

4033cf  mov     rdi, rsi
4033d2  mov     qword  ptr  [rsp+0x10], rsi
4033d7  call    xmalloc
40340d  add     rsp, 0x20

403411  mov     eax, dword  ptr  [rsp+0x18]
403415  mov     dword  ptr  [r13], eax
403419  add     rsp, 0x28
40341d  mov     rax, r12
403420  pop     rbx
403421  pop     rbp
403422  pop     r12
403424  pop     r13
403426  pop     r14
403428  pop     r15
40342a  ret     
-----function_end-----
-----function_start-----
sub_40342b
40342b  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_40345b
40345b  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
clone_quoting_options
        clone_quoting_options:
403460  push    r12
403462  push    rbp
403463  push    rbx
403464  mov     rbx, rdi
403467  call    __errno_location
40346c  mov     r12d, dword  ptr  [rax]
40346f  mov     rbp, rax
403472  lea     rax,  [default_quoting_options]
403479  test    rbx, rbx
40347c  mov     esi, 0x38
403481  cmove   rbx, rax
403485  mov     rdi, rbx
403488  call    xmemdup
40348d  mov     dword  ptr  [rbp], r12d
403491  pop     rbx
403492  pop     rbp
403493  pop     r12
403495  ret     
-----function_end-----
-----function_start-----
sub_403496
403496  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
get_quoting_style
        get_quoting_style:
4034a0  lea     rax,  [default_quoting_options]
4034a7  test    rdi, rdi
4034aa  cmove   rdi, rax
4034ae  mov     eax, dword  ptr  [rdi]
4034b0  ret     
-----function_end-----
-----function_start-----
sub_4034b1
4034b1  nop     dword  ptr  [rax+rax]
4034b6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
set_quoting_style
        set_quoting_style:
4034c0  lea     rax,  [default_quoting_options]
4034c7  test    rdi, rdi
4034ca  cmove   rdi, rax
4034ce  mov     dword  ptr  [rdi], esi
4034d0  ret     
-----function_end-----
-----function_start-----
sub_4034d1
4034d1  nop     dword  ptr  [rax+rax]
4034d6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
set_char_quoting
        set_char_quoting:
4034e0  lea     rax,  [default_quoting_options]
4034e7  test    rdi, rdi
4034ea  mov     ecx, esi
4034ec  cmove   rdi, rax
4034f0  mov     eax, esi
4034f2  and     ecx, 0x1f
4034f5  shr     al, 0x5
4034f8  movzx   eax, al
4034fb  lea     rdi,  [rdi+rax*0x4+0x8]
403500  mov     esi, dword  ptr  [rdi]
403502  mov     eax, esi
403504  shr     eax, cl
403506  xor     edx, eax
403508  and     eax, 0x1
40350b  and     edx, 0x1
40350e  shl     edx, cl
403510  xor     edx, esi
403512  mov     dword  ptr  [rdi], edx
403514  ret     
-----function_end-----
-----function_start-----
sub_403515
403515  nop     
403516  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
set_quoting_flags
        set_quoting_flags:
403520  lea     rax,  [default_quoting_options]
403527  test    rdi, rdi
40352a  cmove   rdi, rax
40352e  mov     eax, dword  ptr  [rdi+0x4]
403531  mov     dword  ptr  [rdi+0x4], esi
403534  ret     
-----function_end-----
-----function_start-----
sub_403535
403535  nop     
403536  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
set_custom_quoting
        set_custom_quoting:
403540  lea     rax,  [default_quoting_options]
403547  test    rdi, rdi
40354a  cmove   rdi, rax
40354e  test    rsi, rsi
403551  mov     dword  ptr  [rdi], 0xa
403557  je      0x403567
403567  sub     rsp, 0x8
40356b  call    abort
403559  test    rdx, rdx
40355c  je      0x403567
40355e  mov     qword  ptr  [rdi+0x28], rsi
403562  mov     qword  ptr  [rdi+0x30], rdx
403566  ret     
-----function_end-----
-----function_start-----
quotearg_buffer
        quotearg_buffer:
403570  push    r15
403572  push    r14
403574  lea     rax,  [default_quoting_options]
40357b  push    r13
40357d  push    r12
40357f  mov     r13, rdi
403582  push    rbp
403583  push    rbx
403584  mov     rbx, r8
403587  mov     r14, rsi
40358a  mov     r15, rdx
40358d  sub     rsp, 0x18
403591  test    r8, r8
403594  cmove   rbx, rax
403598  mov     qword  ptr  [rsp+0x8], rcx
40359d  call    __errno_location
4035a2  mov     r12d, dword  ptr  [rax]
4035a5  mov     rbp, rax
4035a8  lea     rax,  [rbx+0x8]
4035ac  sub     rsp, 0x8
4035b0  mov     r9d, dword  ptr  [rbx+0x4]
4035b4  push    qword  ptr  [rbx+0x30]
4035b7  mov     r8d, dword  ptr  [rbx]
4035ba  push    qword  ptr  [rbx+0x28]
4035bd  mov     rdx, r15
4035c0  push    rax
4035c1  mov     rcx, qword  ptr  [rsp+0x28]
4035c6  mov     rsi, r14
4035c9  mov     rdi, r13
4035cc  call    quotearg_buffer_restyled
4035d1  mov     dword  ptr  [rbp], r12d
4035d5  add     rsp, 0x38
4035d9  pop     rbx
4035da  pop     rbp
4035db  pop     r12
4035dd  pop     r13
4035df  pop     r14
4035e1  pop     r15
4035e3  ret     
-----function_end-----
-----function_start-----
sub_4035e4
4035e4  nop     
4035e6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quotearg_alloc_mem
        quotearg_alloc_mem:
4035f0  push    r15
4035f2  push    r14
4035f4  lea     rax,  [default_quoting_options]
4035fb  push    r13
4035fd  push    r12
4035ff  mov     r12, rdx
403602  push    rbp
403603  push    rbx
403604  mov     rbx, rcx
403607  mov     r14, rdi
40360a  mov     r15, rsi
40360d  sub     rsp, 0x38
403611  test    rcx, rcx
403614  cmove   rbx, rax
403618  xor     ebp, ebp
40361a  call    __errno_location
40361f  test    r12, r12
403622  mov     r13, rax
403625  mov     eax, dword  ptr  [rax]
403627  sete    bpl
40362b  or      ebp, dword  ptr  [rbx+0x4]
40362e  lea     r10,  [rbx+0x8]
403632  sub     rsp, 0x8
403636  mov     r8d, dword  ptr  [rbx]
403639  mov     rcx, r15
40363c  mov     dword  ptr  [rsp+0x14], eax
403640  push    qword  ptr  [rbx+0x30]
403643  mov     rdx, r14
403646  push    qword  ptr  [rbx+0x28]
403649  push    r10
40364b  xor     esi, esi
40364d  mov     r9d, ebp
403650  xor     edi, edi
403652  mov     qword  ptr  [rsp+0x40], r10
403657  call    quotearg_buffer_restyled
40365c  lea     rsi,  [rax+0x1]
403660  mov     qword  ptr  [rsp+0x48], rax
403665  add     rsp, 0x20
403669  mov     rdi, rsi
40366c  mov     qword  ptr  [rsp+0x18], rsi
403671  call    xmalloc
403676  mov     qword  ptr  [rsp+0x10], rax
40367b  sub     rsp, 0x8
40367f  push    qword  ptr  [rbx+0x30]
403682  push    qword  ptr  [rbx+0x28]
403685  mov     r10, qword  ptr  [rsp+0x38]
40368a  mov     r9d, ebp
40368d  mov     r8d, dword  ptr  [rbx]
403690  mov     rcx, r15
403693  mov     rdx, r14
403696  mov     rdi, rax
403699  push    r10
40369b  mov     rsi, qword  ptr  [rsp+0x38]
4036a0  call    quotearg_buffer_restyled
4036a5  mov     eax, dword  ptr  [rsp+0x2c]
4036a9  add     rsp, 0x20
4036ad  test    r12, r12
4036b0  mov     dword  ptr  [r13], eax
4036b4  je      0x4036bf
4036bf  mov     rax, qword  ptr  [rsp+0x10]
4036c4  add     rsp, 0x38
4036c8  pop     rbx
4036c9  pop     rbp
4036ca  pop     r12
4036cc  pop     r13
4036ce  pop     r14
4036d0  pop     r15
4036d2  ret     
4036b6  mov     r11, qword  ptr  [rsp+0x28]
4036bb  mov     qword  ptr  [r12], r11

4036bf  mov     rax, qword  ptr  [rsp+0x10]
4036c4  add     rsp, 0x38
4036c8  pop     rbx
4036c9  pop     rbp
4036ca  pop     r12
4036cc  pop     r13
4036ce  pop     r14
4036d0  pop     r15
4036d2  ret     
-----function_end-----
-----function_start-----
sub_4036d3
4036d3  nop     dword  ptr  [rax]
4036d6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quotearg_alloc
        quotearg_alloc:
4036e0  mov     rcx, rdx
4036e3  xor     edx, edx
4036e5  jmp     quotearg_alloc_mem
-----function_end-----
-----function_start-----
sub_4036ea
4036ea  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
quotearg_free
        quotearg_free:
4036f0  mov     eax,  [nslots]
4036f6  push    r12
4036f8  mov     r12,  [slotvec]
4036ff  push    rbp
403700  push    rbx
403701  cmp     eax, 0x1
403704  jle     0x403731
403731  mov     rdi, qword  ptr  [r12+0x8]
403736  lea     rbx,  [slot0]
40373d  cmp     rdi, rbx
403740  je      0x403759
403706  sub     eax, 0x2
403709  lea     rbx,  [r12+0x18]
40370e  shl     rax, 0x4
403712  lea     rbp,  [r12+rax+0x28]
403717  nop     word  ptr  [rax+rax]

403720  mov     rdi, qword  ptr  [rbx]
403723  add     rbx, 0x10
403727  call    free
403759  lea     rbx,  [slotvec0]
403760  cmp     r12, rbx
403763  je      0x403774
403742  call    free
40372c  cmp     rbx, rbp
40372f  jne     0x403720
403774  pop     rbx
403775  mov      [nslots], 0x1
40377f  pop     rbp
403780  pop     r12
403782  ret     
403765  mov     rdi, r12
403768  call    free
403747  mov      [slotvec0], 0x100
403752  mov      [0x607078], rbx

403759  lea     rbx,  [slotvec0]
403760  cmp     r12, rbx
403763  je      0x403774
403720  mov     rdi, qword  ptr  [rbx]
403723  add     rbx, 0x10
403727  call    free
40376d  mov      [slotvec], rbx

403774  pop     rbx
403775  mov      [nslots], 0x1
40377f  pop     rbp
403780  pop     r12
403782  ret     
-----function_end-----
-----function_start-----
sub_403783
403783  nop     dword  ptr  [rax]
403786  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quotearg_n
        quotearg_n:
403790  lea     rcx,  [default_quoting_options]
403797  mov     rdx, -0x1
40379e  jmp     quotearg_n_options
-----function_end-----
-----function_start-----
sub_4037a3
4037a3  nop     dword  ptr  [rax]
4037a6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quotearg_n_mem
        quotearg_n_mem:
4037b0  lea     rcx,  [default_quoting_options]
4037b7  jmp     quotearg_n_options
-----function_end-----
-----function_start-----
sub_4037bc
4037bc  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
quotearg
        quotearg:
4037c0  lea     rcx,  [default_quoting_options]
4037c7  mov     rsi, rdi
4037ca  mov     rdx, -0x1
4037d1  xor     edi, edi
4037d3  jmp     quotearg_n_options
-----function_end-----
-----function_start-----
sub_4037d8
4037d8  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
quotearg_mem
        quotearg_mem:
4037e0  lea     rcx,  [default_quoting_options]
4037e7  mov     rdx, rsi
4037ea  mov     rsi, rdi
4037ed  xor     edi, edi
4037ef  jmp     quotearg_n_options
-----function_end-----
-----function_start-----
sub_4037f4
4037f4  nop     
4037f6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quotearg_n_style
        quotearg_n_style:
403800  sub     rsp, 0x48
403804  mov     rax, rdx
403807  mov     rdx, qword  ptr   fs:[0x28]
403810  mov     qword  ptr  [rsp+0x38], rdx
403815  xor     edx, edx
403817  cmp     esi, 0xa
40381a  je      0x403884
403884  call    abort
40381c  mov     dword  ptr  [rsp], esi
40381f  mov     rcx, rsp
403822  mov     rdx, -0x1
403829  mov     rsi, rax
40382c  mov     qword  ptr  [rsp+0x4], 0x0
403835  mov     qword  ptr  [rsp+0xc], 0x0
40383e  mov     qword  ptr  [rsp+0x14], 0x0
403847  mov     qword  ptr  [rsp+0x1c], 0x0
403850  mov     qword  ptr  [rsp+0x24], 0x0
403859  mov     qword  ptr  [rsp+0x2c], 0x0
403862  mov     dword  ptr  [rsp+0x34], 0x0
40386a  call    quotearg_n_options
40386f  mov     rcx, qword  ptr  [rsp+0x38]
403874  xor     rcx, qword  ptr   fs:[0x28]
40387d  jne     0x403889
40387f  add     rsp, 0x48
403883  ret     
403889  call    __stack_chk_fail
-----function_end-----
-----function_start-----
sub_40388e
40388e  nop     
-----function_end-----
-----function_start-----
quotearg_n_style_mem
        quotearg_n_style_mem:
403890  sub     rsp, 0x48
403894  mov     rax, rdx
403897  mov     rdx, rcx
40389a  mov     rcx, qword  ptr   fs:[0x28]
4038a3  mov     qword  ptr  [rsp+0x38], rcx
4038a8  xor     ecx, ecx
4038aa  cmp     esi, 0xa
4038ad  je      0x403910
403910  call    abort
4038af  mov     dword  ptr  [rsp], esi
4038b2  mov     rcx, rsp
4038b5  mov     rsi, rax
4038b8  mov     qword  ptr  [rsp+0x4], 0x0
4038c1  mov     qword  ptr  [rsp+0xc], 0x0
4038ca  mov     qword  ptr  [rsp+0x14], 0x0
4038d3  mov     qword  ptr  [rsp+0x1c], 0x0
4038dc  mov     qword  ptr  [rsp+0x24], 0x0
4038e5  mov     qword  ptr  [rsp+0x2c], 0x0
4038ee  mov     dword  ptr  [rsp+0x34], 0x0
4038f6  call    quotearg_n_options
4038fb  mov     rdx, qword  ptr  [rsp+0x38]
403900  xor     rdx, qword  ptr   fs:[0x28]
403909  jne     0x403915
40390b  add     rsp, 0x48
40390f  ret     
403915  call    __stack_chk_fail
-----function_end-----
-----function_start-----
sub_40391a
40391a  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
quotearg_style
        quotearg_style:
403920  mov     rdx, rsi
403923  mov     esi, edi
403925  xor     edi, edi
403927  jmp     quotearg_n_style
-----function_end-----
-----function_start-----
sub_40392c
40392c  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
quotearg_style_mem
        quotearg_style_mem:
403930  mov     rcx, rdx
403933  mov     rdx, rsi
403936  mov     esi, edi
403938  xor     edi, edi
40393a  jmp     quotearg_n_style_mem
-----function_end-----
-----function_start-----
sub_40393f
40393f  nop     
-----function_end-----
-----function_start-----
quotearg_char_mem
        quotearg_char_mem:
403940  sub     rsp, 0x48
403944  mov     ecx, edx
403946  mov     rax, qword  ptr   fs:[0x28]
40394f  mov     qword  ptr  [rsp+0x38], rax
403954  xor     eax, eax
403956  mov     rax,  [0x607230]
40395d  mov     r8, rsp
403960  and     ecx, 0x1f
403963  movdqa  xmm0,  [default_quoting_options]
40396b  mov     qword  ptr  [rsp+0x30], rax
403970  mov     eax, edx
403972  movaps  xmmword  ptr  [rsp], xmm0
403976  shr     al, 0x5
403979  movzx   eax, al
40397c  lea     r9,  [r8+rax*0x4+0x8]
403981  movdqa  xmm0,  [0x607210]
403989  movaps  xmmword  ptr  [rsp+0x10], xmm0
40398e  movdqa  xmm0,  [0x607220]
403996  movaps  xmmword  ptr  [rsp+0x20], xmm0
40399b  mov     edx, dword  ptr  [r9]
40399e  mov     eax, edx
4039a0  shr     eax, cl
4039a2  not     eax
4039a4  and     eax, 0x1
4039a7  shl     eax, cl
4039a9  mov     rcx, r8
4039ac  xor     eax, edx
4039ae  mov     rdx, rsi
4039b1  mov     rsi, rdi
4039b4  mov     dword  ptr  [r9], eax
4039b7  xor     edi, edi
4039b9  call    quotearg_n_options
4039be  mov     rsi, qword  ptr  [rsp+0x38]
4039c3  xor     rsi, qword  ptr   fs:[0x28]
4039cc  jne     0x4039d3
4039ce  add     rsp, 0x48
4039d2  ret     
4039d3  call    __stack_chk_fail
-----function_end-----
-----function_start-----
sub_4039d8
4039d8  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
quotearg_char
        quotearg_char:
4039e0  movsx   edx, sil
4039e4  mov     rsi, -0x1
4039eb  jmp     quotearg_char_mem
-----function_end-----
-----function_start-----
quotearg_colon
        quotearg_colon:
4039f0  mov     edx, 0x3a
4039f5  mov     rsi, -0x1
4039fc  jmp     quotearg_char_mem
-----function_end-----
-----function_start-----
sub_403a01
403a01  nop     dword  ptr  [rax+rax]
403a06  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quotearg_colon_mem
        quotearg_colon_mem:
403a10  mov     edx, 0x3a
403a15  jmp     quotearg_char_mem
-----function_end-----
-----function_start-----
sub_403a1a
403a1a  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
quotearg_n_style_colon
        quotearg_n_style_colon:
403a20  sub     rsp, 0x48
403a24  mov     rax, rdx
403a27  mov     rdx, qword  ptr   fs:[0x28]
403a30  mov     qword  ptr  [rsp+0x38], rdx
403a35  xor     edx, edx
403a37  cmp     esi, 0xa
403a3a  je      0x403aa4
403aa4  call    abort
403a3c  mov     dword  ptr  [rsp], esi
403a3f  mov     rcx, rsp
403a42  mov     rdx, -0x1
403a49  mov     rsi, rax
403a4c  mov     qword  ptr  [rsp+0x4], 0x0
403a55  mov     qword  ptr  [rsp+0xc], 0x4000000
403a5e  mov     qword  ptr  [rsp+0x14], 0x0
403a67  mov     qword  ptr  [rsp+0x1c], 0x0
403a70  mov     qword  ptr  [rsp+0x24], 0x0
403a79  mov     qword  ptr  [rsp+0x2c], 0x0
403a82  mov     dword  ptr  [rsp+0x34], 0x0
403a8a  call    quotearg_n_options
403a8f  mov     rcx, qword  ptr  [rsp+0x38]
403a94  xor     rcx, qword  ptr   fs:[0x28]
403a9d  jne     0x403aa9
403a9f  add     rsp, 0x48
403aa3  ret     
403aa9  call    __stack_chk_fail
-----function_end-----
-----function_start-----
sub_403aae
403aae  nop     
-----function_end-----
-----function_start-----
quotearg_n_custom_mem
        quotearg_n_custom_mem:
403ab0  sub     rsp, 0x48
403ab4  mov     r9, rcx
403ab7  mov     rcx,  [0x607230]
403abe  movdqa  xmm0,  [default_quoting_options]
403ac6  mov     rax, qword  ptr   fs:[0x28]
403acf  mov     qword  ptr  [rsp+0x38], rax
403ad4  xor     eax, eax
403ad6  movaps  xmmword  ptr  [rsp], xmm0
403ada  test    rsi, rsi
403add  mov     qword  ptr  [rsp+0x30], rcx
403ae2  mov     dword  ptr  [rsp], 0xa
403ae9  movdqa  xmm0,  [0x607210]
403af1  movaps  xmmword  ptr  [rsp+0x10], xmm0
403af6  movdqa  xmm0,  [0x607220]
403afe  movaps  xmmword  ptr  [rsp+0x20], xmm0
403b03  je      0x403b37
403b37  call    abort
403b05  test    rdx, rdx
403b08  je      0x403b37
403b0a  mov     qword  ptr  [rsp+0x28], rsi
403b0f  mov     qword  ptr  [rsp+0x30], rdx
403b14  mov     rcx, rsp
403b17  mov     rdx, r8
403b1a  mov     rsi, r9
403b1d  call    quotearg_n_options
403b22  mov     rdi, qword  ptr  [rsp+0x38]
403b27  xor     rdi, qword  ptr   fs:[0x28]
403b30  jne     0x403b3c
403b32  add     rsp, 0x48
403b36  ret     
403b3c  call    __stack_chk_fail
-----function_end-----
-----function_start-----
sub_403b41
403b41  nop     dword  ptr  [rax+rax]
403b46  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quotearg_n_custom
        quotearg_n_custom:
403b50  mov     r8, -0x1
403b57  jmp     quotearg_n_custom_mem
-----function_end-----
-----function_start-----
sub_403b5c
403b5c  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
quotearg_custom
        quotearg_custom:
403b60  mov     rcx, rdx
403b63  mov     r8, -0x1
403b6a  mov     rdx, rsi
403b6d  mov     rsi, rdi
403b70  xor     edi, edi
403b72  jmp     quotearg_n_custom_mem
-----function_end-----
-----function_start-----
sub_403b77
403b77  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
quotearg_custom_mem
        quotearg_custom_mem:
403b80  mov     r8, rcx
403b83  mov     rcx, rdx
403b86  mov     rdx, rsi
403b89  mov     rsi, rdi
403b8c  xor     edi, edi
403b8e  jmp     quotearg_n_custom_mem
-----function_end-----
-----function_start-----
sub_403b93
403b93  nop     dword  ptr  [rax]
403b96  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quote_n_mem
        quote_n_mem:
403ba0  lea     rcx,  [quote_quoting_options]
403ba7  jmp     quotearg_n_options
-----function_end-----
-----function_start-----
sub_403bac
403bac  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
quote_mem
        quote_mem:
403bb0  lea     rcx,  [quote_quoting_options]
403bb7  mov     rdx, rsi
403bba  mov     rsi, rdi
403bbd  xor     edi, edi
403bbf  jmp     quotearg_n_options
-----function_end-----
-----function_start-----
sub_403bc4
403bc4  nop     
403bc6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quote_n
        quote_n:
403bd0  lea     rcx,  [quote_quoting_options]
403bd7  mov     rdx, -0x1
403bde  jmp     quotearg_n_options
-----function_end-----
-----function_start-----
sub_403be3
403be3  nop     dword  ptr  [rax]
403be6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
quote
        quote:
403bf0  lea     rcx,  [quote_quoting_options]
403bf7  mov     rsi, rdi
403bfa  mov     rdx, -0x1
403c01  xor     edi, edi
403c03  jmp     quotearg_n_options
-----function_end-----
-----function_start-----
sub_403c08
403c08  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
safe_write
        safe_write:
403c10  push    r13
403c12  push    r12
403c14  mov     r13d, edi
403c17  push    rbp
403c18  push    rbx
403c19  mov     r12, rsi
403c1c  mov     rbx, rdx
403c1f  sub     rsp, 0x8
403c23  nop     dword  ptr  [rax+rax]

403c28  mov     rdx, rbx
403c2b  mov     rsi, r12
403c2e  mov     edi, r13d
403c31  call    write
403c36  test    rax, rax
403c39  mov     rbp, rax
403c3c  jns     0x403c60
403c3e  call    __errno_location
403c60  add     rsp, 0x8
403c64  mov     rax, rbp
403c67  pop     rbx
403c68  pop     rbp
403c69  pop     r12
403c6b  pop     r13
403c6d  ret     
403c43  mov     eax, dword  ptr  [rax]
403c45  cmp     eax, 0x4
403c48  je      0x403c28
403c28  mov     rdx, rbx
403c2b  mov     rsi, r12
403c2e  mov     edi, r13d
403c31  call    write
403c4a  cmp     eax, 0x16
403c4d  jne     0x403c60
403c4f  cmp     rbx, 0x7ff00000
403c56  jbe     0x403c60
403c58  mov     ebx, 0x7ff00000
403c5d  jmp     0x403c28
-----function_end-----
-----function_start-----
sub_403c5f
403c5f  nop     
-----function_end-----
-----function_start-----
sub_403c6e
403c6e  nop     
-----function_end-----
-----function_start-----
version_etc_arn
        version_etc_arn:
403c70  push    r15
403c72  push    r14
403c74  push    r13
403c76  push    r12
403c78  mov     r12, r9
403c7b  push    rbp
403c7c  push    rbx
403c7d  mov     rbp, rdi
403c80  mov     rbx, r8
403c83  sub     rsp, 0x28
403c87  test    rsi, rsi
403c8a  je      0x403da8
403da8  mov     r8, rcx
403dab  mov     rcx, rdx
403dae  lea     rdx,  [0x405074]
403db5  mov     esi, 0x1
403dba  xor     eax, eax
403dbc  call    __fprintf_chk
403c90  mov     r8, rdx
403c93  lea     rdx,  [0x405068]
403c9a  mov     r9, rcx
403c9d  xor     eax, eax
403c9f  mov     rcx, rsi
403ca2  mov     esi, 0x1
403ca7  call    __fprintf_chk
403dc1  jmp     0x403cac
403cac  lea     rsi,  [0x40507b]
403cb3  xor     edi, edi
403cb5  mov     edx, 0x5
403cba  call    dcgettext
403cbf  lea     rdx,  [version_etc_copyright]
403cc6  mov     rcx, rax
403cc9  mov     r8d, 0x7e3
403ccf  mov     esi, 0x1
403cd4  mov     rdi, rbp
403cd7  xor     eax, eax
403cd9  call    __fprintf_chk
403cde  lea     rsi,  [0x405108]
403ce5  xor     edi, edi
403ce7  mov     edx, 0x5
403cec  call    dcgettext
403cf1  mov     rsi, rbp
403cf4  mov     rdi, rax
403cf7  call    fputs_unlocked
403cfc  cmp     r12, 0x9
403d00  ja      0x404040
403d06  lea     rdx,  [0x405368]
403d0d  movsxd  rax, dword  ptr  [rdx+r12*0x4]
403d11  add     rax, rdx
403d14  jmp     rax
404040  mov     r10, qword  ptr  [rbx+0x40]
404044  mov     r9, qword  ptr  [rbx+0x38]
404048  mov     edx, 0x5
40404d  mov     rax, qword  ptr  [rbx+0x10]
404051  mov     r8, qword  ptr  [rbx+0x8]
404055  lea     rsi,  [0x4052e0]
40405c  mov     r13, qword  ptr  [rbx+0x30]
404060  mov     r12, qword  ptr  [rbx+0x28]
404064  mov     r15, qword  ptr  [rbx+0x20]
404068  mov     r14, qword  ptr  [rbx+0x18]
40406c  mov     qword  ptr  [rsp+0x18], r10
404071  mov     qword  ptr  [rsp+0x10], r9
404076  mov     qword  ptr  [rsp], rax
40407a  mov     qword  ptr  [rsp+0x8], r8
40407f  mov     rbx, qword  ptr  [rbx]
404082  jmp     0x403e12
403f00  lea     rsi,  [0x4051d8]
403f07  mov     edx, 0x5
403f0c  xor     edi, edi
403f0e  mov     r14, qword  ptr  [rbx+0x18]
403f12  mov     r13, qword  ptr  [rbx+0x10]
403f16  mov     r12, qword  ptr  [rbx+0x8]
403f1a  mov     rbx, qword  ptr  [rbx]
403f1d  call    dcgettext
403d20  mov     r9, qword  ptr  [rbx+0x38]
403d24  mov     rax, qword  ptr  [rbx+0x10]
403d28  lea     rsi,  [0x405278]
403d2f  mov     r8, qword  ptr  [rbx+0x8]
403d33  mov     edx, 0x5
403d38  xor     edi, edi
403d3a  mov     r13, qword  ptr  [rbx+0x30]
403d3e  mov     r12, qword  ptr  [rbx+0x28]
403d42  mov     qword  ptr  [rsp+0x10], r9
403d47  mov     r15, qword  ptr  [rbx+0x20]
403d4b  mov     r14, qword  ptr  [rbx+0x18]
403d4f  mov     qword  ptr  [rsp], rax
403d53  mov     qword  ptr  [rsp+0x8], r8
403d58  mov     rbx, qword  ptr  [rbx]
403d5b  call    dcgettext
403e28  mov     rbx, qword  ptr  [rbx]
403e2b  lea     rsi,  [0x40507f]
403e32  mov     edx, 0x5
403e37  xor     edi, edi
403e39  call    dcgettext
403e68  mov     r12, qword  ptr  [rbx+0x8]
403e6c  lea     rsi,  [0x40508f]
403e73  mov     rbx, qword  ptr  [rbx]
403e76  mov     edx, 0x5
403e7b  xor     edi, edi
403e7d  call    dcgettext
403f88  mov     r8, qword  ptr  [rbx+0x8]
403f8c  mov     r12, qword  ptr  [rbx+0x28]
403f90  lea     rsi,  [0x405220]
403f97  mov     r15, qword  ptr  [rbx+0x20]
403f9b  mov     r14, qword  ptr  [rbx+0x18]
403f9f  mov     edx, 0x5
403fa4  mov     r13, qword  ptr  [rbx+0x10]
403fa8  xor     edi, edi
403faa  mov     rbx, qword  ptr  [rbx]
403fad  mov     qword  ptr  [rsp], r8
403fb1  call    dcgettext
403eb0  mov     r13, qword  ptr  [rbx+0x10]
403eb4  mov     r12, qword  ptr  [rbx+0x8]
403eb8  lea     rsi,  [0x4050a6]
403ebf  mov     rbx, qword  ptr  [rbx]
403ec2  mov     edx, 0x5
403ec7  xor     edi, edi
403ec9  call    dcgettext
403ff0  mov     r9, qword  ptr  [rbx+0x10]
403ff4  mov     r13, qword  ptr  [rbx+0x30]
403ff8  lea     rsi,  [0x405248]
403fff  mov     r12, qword  ptr  [rbx+0x28]
404003  mov     r15, qword  ptr  [rbx+0x20]
404007  mov     edx, 0x5
40400c  mov     r14, qword  ptr  [rbx+0x18]
404010  mov     r8, qword  ptr  [rbx+0x8]
404014  xor     edi, edi
404016  mov     qword  ptr  [rsp+0x8], r9
40401b  mov     rbx, qword  ptr  [rbx]
40401e  mov     qword  ptr  [rsp], r8
404022  call    dcgettext
403dd0  mov     r10, qword  ptr  [rbx+0x40]
403dd4  mov     r9, qword  ptr  [rbx+0x38]
403dd8  lea     rsi,  [0x4052a8]
403ddf  mov     rax, qword  ptr  [rbx+0x10]
403de3  mov     r8, qword  ptr  [rbx+0x8]
403de7  mov     edx, 0x5
403dec  mov     r13, qword  ptr  [rbx+0x30]
403df0  mov     r12, qword  ptr  [rbx+0x28]
403df4  mov     r15, qword  ptr  [rbx+0x20]
403df8  mov     r14, qword  ptr  [rbx+0x18]
403dfc  mov     rbx, qword  ptr  [rbx]
403dff  mov     qword  ptr  [rsp+0x18], r10
403e04  mov     qword  ptr  [rsp+0x10], r9
403e09  mov     qword  ptr  [rsp], rax
403e0d  mov     qword  ptr  [rsp+0x8], r8

403e12  xor     edi, edi
403e14  call    dcgettext
403d96  add     rsp, 0x28
403d9a  pop     rbx
403d9b  pop     rbp
403d9c  pop     r12
403d9e  pop     r13
403da0  pop     r14
403da2  pop     r15
403da4  ret     
403f58  mov     r15, qword  ptr  [rbx+0x20]
403f5c  lea     rsi,  [0x4051f8]
403f63  mov     edx, 0x5
403f68  xor     edi, edi
403f6a  mov     r14, qword  ptr  [rbx+0x18]
403f6e  mov     r13, qword  ptr  [rbx+0x10]
403f72  mov     r12, qword  ptr  [rbx+0x8]
403f76  mov     rbx, qword  ptr  [rbx]
403f79  call    dcgettext
403e12  xor     edi, edi
403e14  call    dcgettext
403f22  sub     rsp, 0x8

403f26  push    r14
403f28  mov     rdx, rax
403f2b  mov     r9, r13
403f2e  mov     r8, r12
403f31  mov     rcx, rbx
403f34  mov     rdi, rbp
403f37  mov     esi, 0x1
403f3c  xor     eax, eax
403f3e  call    __fprintf_chk
403d60  sub     rsp, 0x8

403d64  mov     r9, qword  ptr  [rsp+0x18]
403d69  mov     rdx, rax
403d6c  mov     rcx, rbx
403d6f  mov     esi, 0x1
403d74  mov     rdi, rbp
403d77  xor     eax, eax
403d79  push    r9
403d7b  push    r13
403d7d  push    r12
403d7f  push    r15
403d81  push    r14
403d83  mov     r9, qword  ptr  [rsp+0x30]
403d88  mov     r8, qword  ptr  [rsp+0x38]
403d8d  call    __fprintf_chk
403e3e  add     rsp, 0x28
403e42  mov     rcx, rbx
403e45  mov     rdi, rbp
403e48  pop     rbx
403e49  pop     rbp
403e4a  pop     r12
403e4c  pop     r13
403e4e  pop     r14
403e50  pop     r15
403e52  mov     rdx, rax
403e55  mov     esi, 0x1
403e5a  xor     eax, eax
403e5c  jmp     __fprintf_chk
403e82  add     rsp, 0x28
403e86  mov     r8, r12
403e89  mov     rcx, rbx
403e8c  mov     rdi, rbp
403e8f  mov     rdx, rax
403e92  mov     esi, 0x1
403e97  pop     rbx
403e98  pop     rbp
403e99  pop     r12
403e9b  pop     r13
403e9d  pop     r14
403e9f  pop     r15
403ea1  xor     eax, eax
403ea3  jmp     __fprintf_chk
403fb6  sub     rsp, 0x8
403fba  mov     r9, r13
403fbd  push    r12
403fbf  push    r15
403fc1  push    r14

403fc3  mov     r8, qword  ptr  [rsp+0x20]
403fc8  mov     rcx, rbx
403fcb  mov     rdx, rax
403fce  mov     rdi, rbp
403fd1  mov     esi, 0x1
403fd6  xor     eax, eax
403fd8  call    __fprintf_chk
403ece  add     rsp, 0x28
403ed2  mov     r9, r13
403ed5  mov     r8, r12
403ed8  mov     rcx, rbx
403edb  mov     rdi, rbp
403ede  mov     rdx, rax
403ee1  pop     rbx
403ee2  pop     rbp
403ee3  pop     r12
403ee5  pop     r13
403ee7  pop     r14
403ee9  pop     r15
403eeb  mov     esi, 0x1
403ef0  xor     eax, eax
403ef2  jmp     __fprintf_chk
404027  push    r13
404029  push    r12
40402b  push    r15
40402d  push    r14
40402f  mov     r9, qword  ptr  [rsp+0x28]
404034  jmp     0x403fc3
403e19  mov     r10, qword  ptr  [rsp+0x18]
403e1e  push    r10
403e20  jmp     0x403d64
403f7e  push    r15
403f80  jmp     0x403f26
403f43  pop     rax
403f44  pop     rdx
403f45  add     rsp, 0x28
403f49  pop     rbx
403f4a  pop     rbp
403f4b  pop     r12
403f4d  pop     r13
403f4f  pop     r14
403f51  pop     r15
403f53  ret     
403d92  add     rsp, 0x30

403d96  add     rsp, 0x28
403d9a  pop     rbx
403d9b  pop     rbp
403d9c  pop     r12
403d9e  pop     r13
403da0  pop     r14
403da2  pop     r15
403da4  ret     
403fdd  add     rsp, 0x20
403fe1  add     rsp, 0x28
403fe5  pop     rbx
403fe6  pop     rbp
403fe7  pop     r12
403fe9  pop     r13
403feb  pop     r14
403fed  pop     r15
403fef  ret     
403fc3  mov     r8, qword  ptr  [rsp+0x20]
403fc8  mov     rcx, rbx
403fcb  mov     rdx, rax
403fce  mov     rdi, rbp
403fd1  mov     esi, 0x1
403fd6  xor     eax, eax
403fd8  call    __fprintf_chk
403d64  mov     r9, qword  ptr  [rsp+0x18]
403d69  mov     rdx, rax
403d6c  mov     rcx, rbx
403d6f  mov     esi, 0x1
403d74  mov     rdi, rbp
403d77  xor     eax, eax
403d79  push    r9
403d7b  push    r13
403d7d  push    r12
403d7f  push    r15
403d81  push    r14
403d83  mov     r9, qword  ptr  [rsp+0x30]
403d88  mov     r8, qword  ptr  [rsp+0x38]
403d8d  call    __fprintf_chk
403f26  push    r14
403f28  mov     rdx, rax
403f2b  mov     r9, r13
403f2e  mov     r8, r12
403f31  mov     rcx, rbx
403f34  mov     rdi, rbp
403f37  mov     esi, 0x1
403f3c  xor     eax, eax
403f3e  call    __fprintf_chk
-----function_end-----
-----function_start-----
sub_403d16
403d16  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
sub_403da5
403da5  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_403dc6
403dc6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
sub_403e25
403e25  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_403e61
403e61  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_403ea8
403ea8  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_403ef7
403ef7  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_403f54
403f54  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_403f82
403f82  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_404036
404036  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
sub_404087
404087  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
version_etc_ar
        version_etc_ar:
404090  xor     r9d, r9d
404093  cmp     qword  ptr  [r8], 0x0
404097  je      0x4040ab
4040ab  jmp     version_etc_arn
404099  nop     dword  ptr  [rax]
+>4040a0  add     r9, 0x1
| 4040a4  cmp     qword  ptr  [r8+r9*0x8], 0x0
+-4040a9  jne     0x4040a0
-----function_end-----
-----function_start-----
version_etc_va
        version_etc_va:
4040b0  sub     rsp, 0x68
4040b4  mov     r10, r8
4040b7  xor     r9d, r9d
4040ba  mov     rax, qword  ptr   fs:[0x28]
4040c3  mov     qword  ptr  [rsp+0x58], rax
4040c8  xor     eax, eax
4040ca  mov     r8, rsp
4040cd  nop     dword  ptr  [rax]

4040d0  mov     eax, dword  ptr  [r10]
4040d3  cmp     eax, 0x2f
4040d6  ja      0x40411a
4040d8  mov     r11d, eax
4040db  add     r11, qword  ptr  [r10+0x10]
4040df  add     eax, 0x8
4040e2  mov     dword  ptr  [r10], eax

4040e5  mov     rax, qword  ptr  [r11]
4040e8  test    rax, rax
4040eb  mov     qword  ptr  [r8+r9*0x8], rax
4040ef  je      0x4040fb
40411a  mov     r11, qword  ptr  [r10+0x8]
40411e  lea     rax,  [r11+0x8]
404122  mov     qword  ptr  [r10+0x8], rax
404126  jmp     0x4040e5
4040fb  call    version_etc_arn
4040f1  add     r9, 0x1
4040f5  cmp     r9, 0xa
4040f9  jne     0x4040d0
4040e5  mov     rax, qword  ptr  [r11]
4040e8  test    rax, rax
4040eb  mov     qword  ptr  [r8+r9*0x8], rax
4040ef  je      0x4040fb
404100  mov     rax, qword  ptr  [rsp+0x58]
404105  xor     rax, qword  ptr   fs:[0x28]
40410e  jne     0x404115
4040d0  mov     eax, dword  ptr  [r10]
4040d3  cmp     eax, 0x2f
4040d6  ja      0x40411a
404110  add     rsp, 0x68
404114  ret     
404115  call    __stack_chk_fail
-----function_end-----
-----function_start-----
sub_404128
404128  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
version_etc
        version_etc:
404130  push    rbp
404131  push    rbx
404132  mov     r10d, 0x20
404138  xor     r11d, r11d
40413b  sub     rsp, 0xb8
404142  mov     rax, qword  ptr   fs:[0x28]
40414b  mov     qword  ptr  [rsp+0x78], rax
404150  xor     eax, eax
404152  lea     rax,  [rsp+0xd0]
40415a  mov     qword  ptr  [rsp+0xa0], r8
404162  lea     rbx,  [rsp+0xd0]
40416a  lea     r8,  [rsp+0x20]
40416f  mov     qword  ptr  [rsp+0xa8], r9
404177  mov     dword  ptr  [rsp+0x8], 0x20
40417f  mov     qword  ptr  [rsp+0x10], rax
404184  lea     rax,  [rsp+0x80]
40418c  xor     r9d, r9d
40418f  mov     qword  ptr  [rsp+0x18], rax
404194  mov     rbp, rax
404197  nop     word  ptr  [rax+rax]

4041a0  cmp     r10d, 0x2f
4041a4  ja      0x4041fc
4041a6  mov     eax, r10d
4041a9  mov     r11d, 0x1
4041af  add     r10d, 0x8
4041b3  add     rax, rbp

4041b6  mov     rax, qword  ptr  [rax]
4041b9  test    rax, rax
4041bc  mov     qword  ptr  [r8+r9*0x8], rax
4041c0  je      0x4041cc
4041fc  mov     rax, rbx
4041ff  add     rbx, 0x8
404203  jmp     0x4041b6
4041cc  test    r11b, r11b
4041cf  jne     0x4041f5
4041c2  add     r9, 0x1
4041c6  cmp     r9, 0xa
4041ca  jne     0x4041a0
4041b6  mov     rax, qword  ptr  [rax]
4041b9  test    rax, rax
4041bc  mov     qword  ptr  [r8+r9*0x8], rax
4041c0  je      0x4041cc
4041d1  call    version_etc_arn
4041f5  mov     dword  ptr  [rsp+0x8], r10d
4041fa  jmp     0x4041d1
4041a0  cmp     r10d, 0x2f
4041a4  ja      0x4041fc
4041d6  mov     rax, qword  ptr  [rsp+0x78]
4041db  xor     rax, qword  ptr   fs:[0x28]
4041e4  jne     0x4041f0
4041e6  add     rsp, 0xb8
4041ed  pop     rbx
4041ee  pop     rbp
4041ef  ret     
4041f0  call    __stack_chk_fail
-----function_end-----
-----function_start-----
sub_404205
404205  nop     
404206  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
emit_bug_reporting_address
        emit_bug_reporting_address:
404210  push    rbx
404211  lea     rsi,  [0x4050c2]
404218  mov     edx, 0x5
40421d  xor     edi, edi
40421f  call    dcgettext
404224  lea     rdx,  [0x4050d7]
40422b  mov     rsi, rax
40422e  mov     edi, 0x1
404233  xor     eax, eax
404235  call    __printf_chk
40423a  lea     rsi,  [0x4050ed]
404241  mov     edx, 0x5
404246  xor     edi, edi
404248  call    dcgettext
40424d  lea     rcx,  [0x404a88]
404254  lea     rdx,  [0x40491e]
40425b  mov     rsi, rax
40425e  mov     edi, 0x1
404263  xor     eax, eax
404265  call    __printf_chk
40426a  mov     rbx,  [stdout@@GLIBC_2.2.5]
404271  lea     rsi,  [0x405320]
404278  xor     edi, edi
40427a  mov     edx, 0x5
40427f  call    dcgettext
404284  mov     rsi, rbx
404287  mov     rdi, rax
40428a  pop     rbx
40428b  jmp     fputs_unlocked
-----function_end-----
-----function_start-----
xmalloc
        xmalloc:
404290  push    rbx
404291  mov     rbx, rdi
404294  call    malloc
404299  test    rax, rax
40429c  jne     0x4042a3
40429e  test    rbx, rbx
4042a1  jne     0x4042a5
4042a3  pop     rbx
4042a4  ret     
4042a5  call    xalloc_die
-----function_end-----
-----function_start-----
sub_4042aa
4042aa  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
xnmalloc
        xnmalloc:
4042b0  mov     rax, rdi
4042b3  mul     rsi
4042b6  mov     rdi, rax
4042b9  seto    al
4042bc  test    rdi, rdi
4042bf  js      0x4042cb
4042cb  sub     rsp, 0x8
4042cf  call    xalloc_die
4042c1  movzx   eax, al
4042c4  test    rax, rax
4042c7  jne     0x4042cb
4042c9  jmp     xmalloc
-----function_end-----
-----function_start-----
sub_4042d4
4042d4  nop     
4042d6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
xcharalloc
        xcharalloc:
4042e0  jmp     xmalloc
-----function_end-----
-----function_start-----
sub_4042e2
4042e2  nop     dword  ptr  [rax]
4042e6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
xrealloc
        xrealloc:
4042f0  test    rsi, rsi
4042f3  push    rbx
4042f4  mov     rbx, rsi
4042f7  jne     0x4042fe
4042f9  test    rdi, rdi
4042fc  jne     0x404318
4042fe  mov     rsi, rbx
404301  call    realloc
404318  call    free
404306  test    rax, rax
404309  jne     0x404310
40431d  xor     eax, eax
40431f  pop     rbx
404320  ret     
40430b  test    rbx, rbx
40430e  jne     0x404321
404310  pop     rbx
404311  ret     
404321  call    xalloc_die
-----function_end-----
-----function_start-----
sub_404312
404312  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_404326
404326  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
xnrealloc
        xnrealloc:
404330  mov     rax, rsi
404333  mul     rdx
404336  mov     rsi, rax
404339  seto    al
40433c  test    rsi, rsi
40433f  js      0x40434b
40434b  sub     rsp, 0x8
40434f  call    xalloc_die
404341  movzx   eax, al
404344  test    rax, rax
404347  jne     0x40434b
404349  jmp     xrealloc
-----function_end-----
-----function_start-----
sub_404354
404354  nop     
404356  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
x2nrealloc
        x2nrealloc:
404360  test    rdi, rdi
404363  mov     r9, rdx
404366  mov     rcx, qword  ptr  [rsi]
404369  je      0x4043a0
4043a0  test    rcx, rcx
4043a3  je      0x4043c8
40436b  xor     edx, edx
40436d  movabs  rax, 0x5555555555555554
404377  div     r9
40437a  cmp     rax, rcx
40437d  jbe     0x4043bb
4043c8  xor     edx, edx
4043ca  mov     eax, 0x80
4043cf  xor     r8d, r8d
4043d2  div     r9
4043d5  test    rax, rax
4043d8  sete    r8b
4043dc  lea     rcx,  [r8+rax]
4043e0  jmp     0x4043a5
4043a5  mov     rax, rcx
4043a8  mul     r9
4043ab  seto    dl
4043ae  test    rax, rax
4043b1  movzx   edx, dl
4043b4  js      0x4043bb
4043bb  sub     rsp, 0x8
4043bf  call    xalloc_die
40437f  mov     rax, rcx
404382  shr     rax, 0x1
404385  lea     rcx,  [rax+rcx+0x1]

40438a  mov     qword  ptr  [rsi], rcx
40438d  imul    rcx, r9
404391  mov     rsi, rcx
404394  jmp     xrealloc
4043b6  test    rdx, rdx
4043b9  je      0x40438a
40438a  mov     qword  ptr  [rsi], rcx
40438d  imul    rcx, r9
404391  mov     rsi, rcx
404394  jmp     xrealloc
-----function_end-----
-----function_start-----
sub_404399
404399  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_4043c4
4043c4  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_4043e2
4043e2  nop     dword  ptr  [rax]
4043e6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
x2realloc
        x2realloc:
4043f0  test    rdi, rdi
4043f3  mov     rax, qword  ptr  [rsi]
4043f6  je      0x404420
404420  test    rax, rax
404423  mov     edx, 0x80
404428  cmove   rax, rdx
40442c  test    rax, rax
40442f  jns     0x404412
4043f8  movabs  rdx, 0x5555555555555553
404402  cmp     rax, rdx
404405  ja      0x404431
404431  sub     rsp, 0x8
404435  call    xalloc_die
404412  mov     qword  ptr  [rsi], rax
404415  mov     rsi, rax
404418  jmp     xrealloc
404407  mov     rdx, rax
40440a  shr     rdx, 0x1
40440d  lea     rax,  [rdx+rax+0x1]

404412  mov     qword  ptr  [rsi], rax
404415  mov     rsi, rax
404418  jmp     xrealloc
-----function_end-----
-----function_start-----
sub_40441d
40441d  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_40443a
40443a  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
xzalloc
        xzalloc:
404440  push    rbx
404441  mov     rbx, rdi
404444  call    xmalloc
404449  mov     rdx, rbx
40444c  xor     esi, esi
40444e  mov     rdi, rax
404451  pop     rbx
404452  jmp     memset
-----function_end-----
-----function_start-----
sub_404457
404457  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
xcalloc
        xcalloc:
404460  mov     rax, rdi
404463  sub     rsp, 0x8
404467  mul     rsi
40446a  seto    dl
40446d  test    rax, rax
404470  js      0x404489
404489  call    xalloc_die
404472  movzx   edx, dl
404475  test    rdx, rdx
404478  jne     0x404489
40447a  call    calloc
40447f  test    rax, rax
404482  je      0x404489
404484  add     rsp, 0x8
404488  ret     
-----function_end-----
-----function_start-----
sub_40448e
40448e  nop     
-----function_end-----
-----function_start-----
xmemdup
        xmemdup:
404490  push    rbp
404491  push    rbx
404492  mov     rbp, rdi
404495  mov     rdi, rsi
404498  mov     rbx, rsi
40449b  sub     rsp, 0x8
40449f  call    xmalloc
4044a4  add     rsp, 0x8
4044a8  mov     rdx, rbx
4044ab  mov     rsi, rbp
4044ae  pop     rbx
4044af  pop     rbp
4044b0  mov     rdi, rax
4044b3  jmp     memcpy
-----function_end-----
-----function_start-----
sub_4044b8
4044b8  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
xstrdup
        xstrdup:
4044c0  push    rbx
4044c1  mov     rbx, rdi
4044c4  call    strlen
4044c9  mov     rdi, rbx
4044cc  lea     rsi,  [rax+0x1]
4044d0  pop     rbx
4044d1  jmp     xmemdup
-----function_end-----
-----function_start-----
sub_4044d3
4044d3  nop     word  ptr   cs:[rax+rax]
4044dd  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
xalloc_die
        xalloc_die:
4044e0  lea     rsi,  [0x4053cf]
4044e7  sub     rsp, 0x8
4044eb  mov     edx, 0x5
4044f0  xor     edi, edi
4044f2  call    dcgettext
4044f7  mov     edi,  [exit_failure]
4044fd  lea     rdx,  [0x404b40]
404504  mov     rcx, rax
404507  xor     esi, esi
404509  xor     eax, eax
40450b  call    error
404510  call    abort
-----function_end-----
-----function_start-----
sub_404515
404515  nop     word  ptr   cs:[rax+rax]
40451f  nop     
-----function_end-----
-----function_start-----
rpl_mbrtowc
        rpl_mbrtowc:
404520  push    r13
404522  push    r12
404524  mov     r13, rsi
404527  push    rbp
404528  push    rbx
404529  mov     rbx, rdi
40452c  mov     r12, rdx
40452f  sub     rsp, 0x18
404533  mov     rax, qword  ptr   fs:[0x28]
40453c  mov     qword  ptr  [rsp+0x8], rax
404541  xor     eax, eax
404543  lea     rax,  [rsp+0x4]
404548  test    rdi, rdi
40454b  cmove   rbx, rax
40454f  mov     rdi, rbx
404552  call    mbrtowc
404557  cmp     rax, -0x3
40455b  mov     rbp, rax
40455e  jbe     0x404580
404580  mov     rdx, qword  ptr  [rsp+0x8]
404585  xor     rdx, qword  ptr   fs:[0x28]
40458e  mov     rax, rbp
404591  jne     0x40459e
404560  test    r12, r12
404563  je      0x404580
404593  add     rsp, 0x18
404597  pop     rbx
404598  pop     rbp
404599  pop     r12
40459b  pop     r13
40459d  ret     
40459e  call    __stack_chk_fail
404565  xor     edi, edi
404567  call    hard_locale
40456c  test    al, al
40456e  jne     0x404580
404570  movzx   eax, byte  ptr  [r13]
404575  mov     ebp, 0x1
40457a  mov     dword  ptr  [rbx], eax
40457c  nop     dword  ptr  [rax]

404580  mov     rdx, qword  ptr  [rsp+0x8]
404585  xor     rdx, qword  ptr   fs:[0x28]
40458e  mov     rax, rbp
404591  jne     0x40459e
-----function_end-----
-----function_start-----
sub_4045a3
4045a3  nop     word  ptr   cs:[rax+rax]
4045ad  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
close_stream
        close_stream:
4045b0  push    r12
4045b2  push    rbp
4045b3  mov     rbp, rdi
4045b6  push    rbx
4045b7  call    __fpending
4045bc  mov     ebx, dword  ptr  [rbp]
4045bf  mov     rdi, rbp
4045c2  mov     r12, rax
4045c5  call    rpl_fclose
4045ca  and     ebx, 0x20
4045cd  test    ebx, ebx
4045cf  jne     0x4045e8
4045d1  test    eax, eax
4045d3  je      0x4045df
4045e8  test    eax, eax
4045ea  jne     0x404608
4045df  pop     rbx
4045e0  pop     rbp
4045e1  pop     r12
4045e3  ret     
4045d5  test    r12, r12
4045d8  mov     eax, 0xffffffff
4045dd  je      0x404618
4045ec  call    __errno_location
404608  pop     rbx
404609  mov     eax, 0xffffffff
40460e  pop     rbp
40460f  pop     r12
404611  ret     
404618  call    __errno_location
4045f1  mov     dword  ptr  [rax], 0x0
4045f7  mov     eax, 0xffffffff
4045fc  pop     rbx
4045fd  pop     rbp
4045fe  pop     r12
404600  ret     
40461d  cmp     dword  ptr  [rax], 0x9
404620  pop     rbx
404621  pop     rbp
404622  pop     r12
404624  setne   al
404627  movzx   eax, al
40462a  neg     eax
40462c  ret     
-----function_end-----
-----function_start-----
sub_4045e4
4045e4  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_404601
404601  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_404612
404612  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_40462d
40462d  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
hard_locale
        hard_locale:
404630  sub     rsp, 0x8
404634  xor     esi, esi
404636  call    setlocale
40463b  mov     rdx, rax
40463e  mov     eax, 0x1
404643  test    rdx, rdx
404646  je      0x404665
404665  add     rsp, 0x8
404669  ret     
  404648  lea     rdi,  [0x4053e0]
  40464f  mov     ecx, 0x2
  404654  mov     rsi, rdx
  
@ 404657  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
404659  seta    cl
40465c  sbb     cl, 0x0
40465f  xor     eax, eax
404661  test    cl, cl
404663  jne     0x404670
@ 404657  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
  404670  lea     rdi,  [0x4053e2]
  404677  mov     ecx, 0x6
  40467c  mov     rsi, rdx
  
@ 40467f  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
404681  seta    al
404684  sbb     al, 0x0
404686  test    al, al
404688  setne   al
40468b  add     rsp, 0x8
40468f  ret     
@ 40467f  repe cmpsb byte  ptr  [rsi], byte  ptr  [rdi]
-----function_end-----
-----function_start-----
sub_40466a
40466a  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
locale_charset
        locale_charset:
404690  sub     rsp, 0x8
404694  mov     edi, 0xe
404699  call    nl_langinfo
40469e  test    rax, rax
4046a1  je      0x4046c0
4046c0  lea     rax,  [0x4053e8]
4046c7  add     rsp, 0x8
4046cb  ret     
4046a3  cmp     byte  ptr  [rax], 0x0
4046a6  lea     rdx,  [0x4053e8]
4046ad  cmove   rax, rdx
4046b1  add     rsp, 0x8
4046b5  ret     
-----function_end-----
-----function_start-----
sub_4046b6
4046b6  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
sub_4046cc
4046cc  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
rpl_fclose
        rpl_fclose:
4046d0  push    r12
4046d2  push    rbp
4046d3  push    rbx
4046d4  mov     rbx, rdi
4046d7  call    fileno
4046dc  test    eax, eax
4046de  mov     rdi, rbx
4046e1  js      0x404737
404737  pop     rbx
404738  pop     rbp
404739  pop     r12
40473b  jmp     fclose
4046e3  call    __freading
4046e8  test    eax, eax
4046ea  jne     0x404718
4046ec  mov     rdi, rbx
4046ef  call    rpl_fflush
404718  mov     rdi, rbx
40471b  call    fileno
4046f4  test    eax, eax
4046f6  je      0x404734
404720  xor     esi, esi
404722  mov     edx, 0x1
404727  mov     edi, eax
404729  call    lseek
404734  mov     rdi, rbx

404737  pop     rbx
404738  pop     rbp
404739  pop     r12
40473b  jmp     fclose
4046f8  call    __errno_location
40472e  cmp     rax, -0x1
404732  jne     0x4046ec
4046fd  mov     r12d, dword  ptr  [rax]
404700  mov     rdi, rbx
404703  mov     rbp, rax
404706  call    fclose
40470b  test    r12d, r12d
40470e  jne     0x404740
404710  pop     rbx
404711  pop     rbp
404712  pop     r12
404714  ret     
404740  mov     dword  ptr  [rbp], r12d
404744  mov     eax, 0xffffffff
404749  jmp     0x404710
-----function_end-----
-----function_start-----
sub_404715
404715  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
sub_40474b
40474b  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
rpl_fflush
        rpl_fflush:
404750  test    rdi, rdi
404753  push    rbx
404754  mov     rbx, rdi
404757  je      0x40476a
40476a  mov     rdi, rbx
40476d  pop     rbx
40476e  jmp     fflush
404759  call    __freading
40475e  test    eax, eax
404760  je      0x40476a
404762  test    dword  ptr  [rbx], 0x100
404768  jne     0x404778
404778  mov     rdi, rbx
40477b  mov     edx, 0x1
404780  xor     esi, esi
404782  call    rpl_fseeko
404787  mov     rdi, rbx
40478a  pop     rbx
40478b  jmp     fflush
-----function_end-----
-----function_start-----
sub_404773
404773  nop     dword  ptr  [rax+rax]
-----function_end-----
-----function_start-----
rpl_fseeko
        rpl_fseeko:
404790  mov     rax, qword  ptr  [rdi+0x8]
404794  cmp     qword  ptr  [rdi+0x10], rax
404798  je      0x4047a0
4047a0  mov     rax, qword  ptr  [rdi+0x20]
4047a4  cmp     qword  ptr  [rdi+0x28], rax
4047a8  jne     0x40479a
40479a  jmp     fseeko
4047aa  cmp     qword  ptr  [rdi+0x48], 0x0
4047af  jne     0x40479a
4047b1  push    r12
4047b3  push    rbp
4047b4  mov     r12d, edx
4047b7  push    rbx
4047b8  mov     rbp, rsi
4047bb  mov     rbx, rdi
4047be  call    fileno
4047c3  mov     edx, r12d
4047c6  mov     rsi, rbp
4047c9  mov     edi, eax
4047cb  call    lseek
4047d0  cmp     rax, -0x1
4047d4  je      0x4047e2
4047e2  pop     rbx
4047e3  pop     rbp
4047e4  pop     r12
4047e6  ret     
4047d6  and     dword  ptr  [rbx], 0xffffffef
4047d9  mov     qword  ptr  [rbx+0x90], rax
4047e0  xor     eax, eax

4047e2  pop     rbx
4047e3  pop     rbp
4047e4  pop     r12
4047e6  ret     
-----function_end-----
-----function_start-----
sub_40479f
40479f  nop     
-----function_end-----
-----function_start-----
sub_4047e7
4047e7  nop     word  ptr  [rax+rax]
-----function_end-----
-----function_start-----
sub_404855
404855  nop     
404856  nop     word  ptr   cs:[rax+rax]
-----function_end-----
-----function_start-----
sub_404862
404862  nop     word  ptr   cs:[rax+rax]
40486c  nop     dword  ptr  [rax]
-----function_end-----
-----function_start-----
atexit
        atexit:
404870  mov     rdx,  [__dso_handle]
404877  xor     esi, esi
404879  jmp     __cxa_atexit
-----function_end-----
-----function_start-----
_fini
        _fini:
404880  sub     rsp, 0x8
404884  add     rsp, 0x8
404888  ret     
-----function_end-----
-----function_start-----
free
